{"version":3,"file":"index-4be8fe8b.js","sources":["../../../src/pages/dashboard/base/index.ts","../../../src/pages/dashboard/base/constants.ts","../../../src/pages/dashboard/base/components/top-panel.vue","../../../src/pages/dashboard/base/components/middle-chart.vue","../../../src/pages/dashboard/base/components/rank-list.vue","../../../src/pages/dashboard/base/components/overview.vue","../../../src/pages/dashboard/base/index.vue"],"sourcesContent":["import dayjs from 'dayjs';\nimport { TChartColor } from '@/config/color';\nimport { getChartListColor } from '@/utils/color';\nimport { getRandomArray } from '@/utils/charts';\n\n/** 首页 dashboard 折线图 */\nexport function constructInitDashboardDataset(type: string) {\n  const dateArray: Array<string> = [\n    '周一',\n    '周二',\n    '周三',\n    '周四',\n    '周五',\n    '周六',\n    '周日'\n  ];\n  const datasetAxis = {\n    xAxis: {\n      type: 'category',\n      show: false,\n      data: dateArray\n    },\n    yAxis: {\n      show: false,\n      type: 'value'\n    },\n    grid: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  };\n\n  if (type === 'line') {\n    const lineDataset = {\n      ...datasetAxis,\n      color: ['#fff'],\n      series: [\n        {\n          data: [150, 230, 224, 218, 135, 147, 260],\n          type,\n          showSymbol: true,\n          symbol: 'circle',\n          symbolSize: 0,\n          markPoint: {\n            data: [\n              { type: 'max', name: '最大值' },\n              { type: 'min', name: '最小值' }\n            ]\n          }\n        }\n      ]\n    };\n    return lineDataset;\n  }\n  const barDataset = {\n    ...datasetAxis,\n    color: getChartListColor(),\n    series: [\n      {\n        data: [\n          100,\n          130,\n          184,\n          218,\n          {\n            value: 135\n          },\n          {\n            value: 118\n          },\n          {\n            value: 60\n          }\n        ],\n        type,\n        barWidth: 9\n      }\n    ]\n  };\n  return barDataset;\n}\n\n/** 柱状图数据源 */\nexport function constructInitDataset({\n  dateTime = [],\n  placeholderColor,\n  borderColor\n}: { dateTime: Array<string> } & TChartColor) {\n  // const dataset: Array<Array<string>> = [['时间'], ['入库'], ['出库']];\n  const divideNum = 10;\n  const timeArray = [];\n  const inArray = [];\n  const outArray = [];\n  for (let i = 0; i < divideNum; i++) {\n    // const [timeArray, inArray, outArray] = dataset;\n    if (dateTime.length > 0) {\n      const dateAbsTime: number =\n        (new Date(dateTime[1]).getTime() - new Date(dateTime[0]).getTime()) /\n        divideNum;\n      const enhandTime: number =\n        new Date(dateTime[0]).getTime() + dateAbsTime * i;\n      // console.log('dateAbsTime..', dateAbsTime, enhandTime);\n      timeArray.push(dayjs(enhandTime).format('YYYY-MM-DD'));\n    } else {\n      timeArray.push(\n        dayjs()\n          .subtract(divideNum - i, 'day')\n          .format('YYYY-MM-DD')\n      );\n    }\n\n    inArray.push(getRandomArray().toString());\n    outArray.push(getRandomArray().toString());\n  }\n\n  // console.log('timeArray..', timeArray);\n\n  const dataset = {\n    color: getChartListColor(),\n    tooltip: {\n      trigger: 'item'\n    },\n    xAxis: {\n      type: 'category',\n      data: timeArray,\n      axisLabel: {\n        color: placeholderColor\n      },\n      axisLine: {\n        lineStyle: {\n          color: getChartListColor()[1],\n          width: 1\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: placeholderColor\n      },\n      splitLine: {\n        lineStyle: {\n          color: borderColor\n        }\n      }\n    },\n    grid: {\n      top: '5%',\n      left: '25px',\n      right: 0,\n      bottom: '60px'\n    },\n    legend: {\n      icon: 'rect',\n      itemWidth: 12,\n      itemHeight: 4,\n      itemGap: 48,\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      },\n      left: 'center',\n      bottom: '0',\n      orient: 'horizontal',\n      data: ['本月', '上月']\n    },\n    series: [\n      {\n        name: '本月',\n        data: outArray,\n        type: 'bar'\n      },\n      {\n        name: '上月',\n        data: inArray,\n        type: 'bar'\n      }\n    ]\n  };\n\n  return dataset;\n}\n\n/**\n *  线性图表数据源\n *\n * @export\n * @param {Array<string>} [dateTime=[]]\n * @returns {*}\n */\nexport function getLineChartDataSet({\n  dateTime = [],\n  placeholderColor,\n  borderColor\n}: { dateTime?: Array<string> } & TChartColor) {\n  const divideNum = 10;\n  const timeArray = [];\n  const inArray = [];\n  const outArray = [];\n  for (let i = 0; i < divideNum; i++) {\n    if (dateTime.length > 0) {\n      const dateAbsTime: number =\n        (new Date(dateTime[1]).getTime() - new Date(dateTime[0]).getTime()) /\n        divideNum;\n      const enhandTime: number =\n        new Date(dateTime[0]).getTime() + dateAbsTime * i;\n      // console.log('dateAbsTime..', dateAbsTime, enhandTime);\n      timeArray.push(dayjs(enhandTime).format('MM-DD'));\n    } else {\n      timeArray.push(\n        dayjs()\n          .subtract(divideNum - i, 'day')\n          .format('MM-DD')\n      );\n    }\n\n    inArray.push(getRandomArray().toString());\n    outArray.push(getRandomArray().toString());\n  }\n\n  const dataSet = {\n    color: getChartListColor(),\n    tooltip: {\n      trigger: 'item'\n    },\n    grid: {\n      left: '0',\n      right: '20px',\n      top: '5px',\n      bottom: '36px',\n      containLabel: true\n    },\n    legend: {\n      left: 'center',\n      bottom: '0',\n      orient: 'horizontal', // legend 横向布局。\n      data: ['本月', '上月'],\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: timeArray,\n      boundaryGap: false,\n      axisLabel: {\n        color: placeholderColor\n      },\n      axisLine: {\n        lineStyle: {\n          width: 1\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: placeholderColor\n      },\n      splitLine: {\n        lineStyle: {\n          color: borderColor\n        }\n      }\n    },\n    series: [\n      {\n        name: '本月',\n        data: outArray,\n        type: 'line',\n        smooth: false,\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8\n      },\n      {\n        name: '上月',\n        data: inArray,\n        type: 'line',\n        smooth: false,\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8\n      }\n    ]\n  };\n  return dataSet;\n}\n\n/**\n * 获取饼图数据\n *\n * @export\n * @param {number} [radius=1]\n * @returns {*}\n */\nexport function getPieChartDataSet({\n  radius = 42,\n  textColor,\n  placeholderColor,\n  containerColor\n}: { radius?: number } & Record<string, string>) {\n  return {\n    color: getChartListColor(),\n    tooltip: {\n      show: false,\n      trigger: 'axis',\n      position: null\n    },\n    grid: {\n      top: '0',\n      right: '0'\n    },\n    legend: {\n      selectedMode: false,\n      itemWidth: 12,\n      itemHeight: 4,\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      },\n      left: 'center',\n      bottom: '0',\n      orient: 'horizontal' // legend 横向布局。\n    },\n    series: [\n      {\n        name: '销售渠道',\n        type: 'pie',\n        radius: ['48%', '60%'],\n        avoidLabelOverlap: true,\n        selectedMode: true,\n        silent: true,\n\n        label: {\n          show: true,\n          position: 'center',\n          formatter: ['{value|{d}%}', '{name|{b}渠道占比}'].join('\\n'),\n          rich: {\n            value: {\n              color: textColor,\n              fontSize: 28,\n              fontWeight: 'normal',\n              lineHeight: 46\n            },\n            name: {\n              color: '#909399',\n              fontSize: 12,\n              lineHeight: 14\n            }\n          }\n        },\n        emphasis: {\n          label: {\n            show: true,\n            formatter: ['{value|{d}%}', '{name|{b}渠道占比}'].join('\\n'),\n            rich: {\n              value: {\n                color: textColor,\n                fontSize: 28,\n                fontWeight: 'normal',\n                lineHeight: 46\n              },\n              name: {\n                color: '#909399',\n                fontSize: 14,\n                lineHeight: 14\n              }\n            }\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: [\n          {\n            value: 1048,\n            name: '线上'\n          },\n          { value: radius * 7, name: '门店' }\n        ]\n      }\n    ]\n  };\n}\n","import { TdBaseTableProps } from 'tdesign-vue-next';\n\ninterface DashboardPanel {\n  title: string;\n  number: string | number;\n  leftType: string;\n  upTrend?: string;\n  downTrend?: string;\n}\n\ninterface TendItem {\n  growUp?: number;\n  productName: string;\n  count: number;\n  date: string;\n}\n\nexport const PANE_LIST: Array<DashboardPanel> = [\n  {\n    title: '总收入',\n    number: '¥ 28,425.00',\n    upTrend: '20.5%',\n    leftType: 'echarts-line'\n  },\n  {\n    title: '总退款',\n    number: '¥ 768.00',\n    downTrend: '20.5%',\n    leftType: 'echarts-bar'\n  },\n  {\n    title: '活跃用户（个）',\n    number: '1126',\n    upTrend: '20.5%',\n    leftType: 'icon-usergroup'\n  },\n  {\n    title: '产生订单（个）',\n    number: 527,\n    downTrend: '20.5%',\n    leftType: 'icon-file-paste'\n  }\n];\n\nexport const SALE_TEND_LIST: Array<TendItem> = [\n  {\n    growUp: 1,\n    productName: '国家电网有限公司',\n    count: 7059,\n    date: '2021-09-01'\n  },\n  {\n    growUp: -1,\n    productName: '深圳燃气集团股份有限公司',\n    count: 6437,\n    date: '2021-09-01'\n  },\n  {\n    growUp: 4,\n    productName: '国家烟草专卖局',\n    count: 4221,\n    date: '2021-09-01'\n  },\n  {\n    growUp: 3,\n    productName: '中国电信集团有限公司',\n    count: 3317,\n    date: '2021-09-01'\n  },\n  {\n    growUp: -3,\n    productName: '中国移动通信集团有限公司',\n    count: 3015,\n    date: '2021-09-01'\n  },\n  {\n    growUp: -3,\n    productName: '新余市办公用户采购项目',\n    count: 2015,\n    date: '2021-09-12'\n  }\n];\n\nexport const BUY_TEND_LIST: Array<TendItem> = [\n  {\n    growUp: 1,\n    productName: 'xx科技有限公司',\n    count: 3015,\n    date: '2021-09-01'\n  },\n  {\n    growUp: -1,\n    productName: '大润发有限公司',\n    count: 2015,\n    date: '2021-09-01'\n  },\n  {\n    growUp: 6,\n    productName: '四川海底捞股份有限公司',\n    count: 1815,\n    date: '2021-09-11'\n  },\n  {\n    growUp: -3,\n    productName: '索尼（中国）有限公司',\n    count: 1015,\n    date: '2021-09-21'\n  },\n  {\n    growUp: -4,\n    productName: '松下电器（中国）有限公司',\n    count: 445,\n    date: '2021-09-19'\n  },\n  {\n    growUp: -3,\n    productName: '新余市办公用户采购项目',\n    count: 2015,\n    date: '2021-09-12'\n  }\n];\n\nexport const SALE_COLUMNS: TdBaseTableProps['columns'] = [\n  {\n    align: 'center',\n    colKey: 'index',\n    title: '排名',\n    width: 80,\n    fixed: 'left'\n  },\n  {\n    align: 'left',\n    ellipsis: true,\n    colKey: 'productName',\n    title: '客户名称',\n    width: 150\n  },\n  {\n    align: 'center',\n    colKey: 'growUp',\n    width: 100,\n    title: '较上周'\n  },\n  {\n    align: 'center',\n    colKey: 'count',\n    title: '订单量',\n    width: 100\n  },\n  {\n    align: 'center',\n    colKey: 'date',\n    width: 140,\n    title: '合同签订日期'\n  },\n  {\n    align: 'center',\n    colKey: 'operation',\n    title: '操作',\n    width: 80,\n    fixed: 'right'\n  }\n];\n\nexport const BUY_COLUMNS: TdBaseTableProps['columns'] = [\n  {\n    align: 'center',\n    colKey: 'index',\n    title: '排名',\n    width: 80,\n    fixed: 'left'\n  },\n  {\n    align: 'left',\n    ellipsis: true,\n    colKey: 'productName',\n    width: 150,\n    title: '供应商名称'\n  },\n  {\n    align: 'center',\n    colKey: 'growUp',\n    width: 100,\n    title: '较上周'\n  },\n  {\n    align: 'center',\n    colKey: 'count',\n    title: '订单量',\n    width: 100\n  },\n  {\n    align: 'center',\n    colKey: 'date',\n    width: 140,\n    title: '合同签订日期'\n  },\n  {\n    align: 'center',\n    colKey: 'operation',\n    title: '操作',\n    width: 80,\n    fixed: 'right'\n  }\n];\n","<template>\n  <t-row :gutter=\"[16, 16]\">\n    <t-col\n      v-for=\"(item, index) in PANE_LIST\"\n      :key=\"item.title\"\n      :xs=\"6\"\n      :xl=\"3\"\n    >\n      <t-card\n        :title=\"item.title\"\n        :style=\"{ height: '168px' }\"\n        :class=\"{\n          'dashboard-item': true,\n          'dashboard-item--main-color': index == 0\n        }\"\n      >\n        <div class=\"dashboard-item-top\">\n          <span :style=\"{ fontSize: `${resizeTime * 36}px` }\">\n            {{ item.number }}\n          </span>\n        </div>\n        <div class=\"dashboard-item-left\">\n          <div\n            v-if=\"index === 0\"\n            id=\"moneyContainer\"\n            class=\"dashboard-chart-container\"\n            :style=\"{\n              width: `${resizeTime * 120}px`,\n              height: `${resizeTime * 66}px`\n            }\"\n          ></div>\n          <div\n            v-else-if=\"index === 1\"\n            id=\"refundContainer\"\n            class=\"dashboard-chart-container\"\n            :style=\"{\n              width: `${resizeTime * 120}px`,\n              height: `${resizeTime * 42}px`\n            }\"\n          ></div>\n          <span\n            v-else-if=\"index === 2\"\n            :style=\"{ marginTop: `-24px` }\"\n          >\n            <usergroup-icon />\n          </span>\n          <span\n            v-else\n            :style=\"{ marginTop: '-24px' }\"\n          >\n            <file-icon />\n          </span>\n        </div>\n        <template #footer>\n          <div class=\"dashboard-item-bottom\">\n            <div class=\"dashboard-item-block\">\n              自从上周以来\n              <trend\n                class=\"dashboard-item-trend\"\n                :type=\"item.upTrend ? 'up' : 'down'\"\n                :is-reverse-color=\"index === 0\"\n                :describe=\"item.upTrend || item.downTrend\"\n              />\n            </div>\n            <t-icon name=\"chevron-right\" />\n          </div>\n        </template>\n      </t-card>\n    </t-col>\n  </t-row>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'DashboardBase'\n};\n</script>\n\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts/core';\nimport { LineChart, BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { useSettingStore } from '@/store';\nimport { changeChartsTheme } from '@/utils/color';\n\n// 导入样式\nimport Trend from '@/components/trend/index.vue';\nimport { constructInitDashboardDataset } from '../index';\n\nimport { PANE_LIST } from '../constants';\n\necharts.use([LineChart, BarChart, CanvasRenderer]);\n\nconst store = useSettingStore();\nconst resizeTime = ref(1);\n\n// moneyCharts\nlet moneyContainer: HTMLElement;\nlet moneyChart: echarts.ECharts;\nconst renderMoneyChart = () => {\n  if (!moneyContainer) {\n    moneyContainer = document.getElementById('moneyContainer');\n  }\n  moneyChart = echarts.init(moneyContainer);\n  moneyChart.setOption(constructInitDashboardDataset('line'));\n};\n\n// refundCharts\nlet refundContainer: HTMLElement;\nlet refundChart: echarts.ECharts;\nconst renderRefundChart = () => {\n  if (!refundContainer) {\n    refundContainer = document.getElementById('refundContainer');\n  }\n  refundChart = echarts.init(refundContainer);\n  refundChart.setOption(constructInitDashboardDataset('bar'));\n};\n\nconst renderCharts = () => {\n  renderMoneyChart();\n  renderRefundChart();\n};\n\n// chartSize update\nconst updateContainer = () => {\n  if (\n    document.documentElement.clientWidth >= 1400 &&\n    document.documentElement.clientWidth < 1920\n  ) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 2080).toFixed(2)\n    );\n  } else if (document.documentElement.clientWidth < 1080) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 1080).toFixed(2)\n    );\n  } else {\n    resizeTime.value = 1;\n  }\n  moneyChart.resize({\n    width: resizeTime.value * 120,\n    height: resizeTime.value * 66\n  });\n  refundChart.resize({\n    width: resizeTime.value * 120,\n    height: resizeTime.value * 42\n  });\n};\n\nonMounted(() => {\n  renderCharts();\n  nextTick(() => {\n    updateContainer();\n  });\n  window.addEventListener('resize', updateContainer, false);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateContainer);\n});\n\nwatch(\n  () => store.brandTheme,\n  () => {\n    changeChartsTheme([refundChart]);\n  }\n);\n\nwatch(\n  () => store.mode,\n  () => {\n    [moneyChart, refundChart].forEach(item => {\n      item.dispose();\n    });\n\n    renderCharts();\n  }\n);\n</script>\n\n<style lang=\"less\" scoped>\n.dashboard-item {\n  padding: 8px;\n  :deep(.t-card__footer) {\n    padding-top: 0;\n  }\n  :deep(.t-card__title) {\n    font-size: 14px;\n    font-weight: 500;\n  }\n  :deep(.t-card__body) {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    flex: 1;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n  &-top {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    > span {\n      display: inline-block;\n      font-size: 36px;\n      line-height: 44px;\n      color: var(--td-text-color-primary);\n    }\n  }\n  &-bottom {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    > .t-icon {\n      cursor: pointer;\n    }\n  }\n  &-block {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    line-height: 22px;\n    color: var(--td-text-color-placeholder);\n  }\n  &-trend {\n    margin-left: 8px;\n  }\n  &-left {\n    position: absolute;\n    top: 0;\n    right: 32px;\n    > span {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      width: 56px;\n      height: 56px;\n      background: var(--td-brand-color-1);\n      border-radius: 50%;\n      .t-icon {\n        font-size: 24px;\n        color: var(--td-brand-color);\n      }\n    }\n  }\n\n  // 针对第一个卡片需要反色处理\n  &--main-color {\n    color: var(--td-text-color-primary);\n    background: var(--td-brand-color);\n    :deep(.t-card__title),\n    .dashboard-item-top span,\n    .dashboard-item-bottom {\n      color: var(--td-text-color-anti);\n    }\n    .dashboard-item-block {\n      color: var(--td-text-color-anti);\n      opacity: 0.6;\n    }\n    .dashboard-item-bottom {\n      color: var(--td-text-color-anti);\n    }\n  }\n}\n</style>\n","<template>\n  <t-row\n    :gutter=\"16\"\n    class=\"row-container\"\n  >\n    <t-col\n      :xs=\"12\"\n      :xl=\"9\"\n    >\n      <t-card\n        title=\"统计数据\"\n        :subtitle=\"`(万元)${currentMonth}`\"\n        class=\"dashboard-chart-card\"\n      >\n        <template #option>\n          <div class=\"dashboard-chart-title-container\">\n            <t-date-range-picker\n              class=\"card-date-picker-container\"\n              theme=\"primary\"\n              mode=\"date\"\n              :default-value=\"LAST_7_DAYS\"\n              @change=\"onCurrencyChange\"\n            />\n          </div>\n        </template>\n        <div\n          id=\"monitorContainer\"\n          ref=\"monitorContainer\"\n          class=\"dashboard-chart-container\"\n          :style=\"{ width: '100%', height: `${resizeTime * 326}px` }\"\n        ></div>\n      </t-card>\n    </t-col>\n    <t-col\n      :xs=\"12\"\n      :xl=\"3\"\n    >\n      <t-card\n        title=\"销售渠道\"\n        :subtitle=\"currentMonth\"\n        class=\"dashboard-chart-card\"\n      >\n        <div\n          id=\"countContainer\"\n          ref=\"countContainer\"\n          :style=\"{\n            width: `${resizeTime * 326}px`,\n            height: `${resizeTime * 326}px`,\n            margin: '0 auto'\n          }\"\n          class=\"dashboard-chart-container\"\n        ></div>\n      </t-card>\n    </t-col>\n  </t-row>\n</template>\n\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  LegendComponent,\n  GridComponent\n} from 'echarts/components';\nimport { PieChart, LineChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { useSettingStore } from '@/store';\nimport { LAST_7_DAYS } from '@/utils/date';\nimport { changeChartsTheme } from '@/utils/color';\n\nimport { getPieChartDataSet, getLineChartDataSet } from '../index';\n\necharts.use([\n  TooltipComponent,\n  LegendComponent,\n  PieChart,\n  GridComponent,\n  LineChart,\n  CanvasRenderer\n]);\n\nconst getThisMonth = (checkedValues?: string[]) => {\n  let date: Date;\n  if (!checkedValues || checkedValues.length === 0) {\n    date = new Date();\n    return `${date.getFullYear()}-${date.getMonth() + 1}`;\n  }\n  date = new Date(checkedValues[0]);\n  const date2 = new Date(checkedValues[1]);\n\n  const startMonth =\n    date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n  const endMonth =\n    date2.getMonth() + 1 > 9\n      ? date2.getMonth() + 1\n      : `0${date2.getMonth() + 1}`;\n  return `${date.getFullYear()}-${startMonth}  至  ${date2.getFullYear()}-${endMonth}`;\n};\n\nconst store = useSettingStore();\nconst resizeTime = ref(1);\n\nconst chartColors = computed(() => store.chartColors);\n\n// monitorChart\nlet monitorContainer: HTMLElement;\nlet monitorChart: echarts.ECharts;\nconst renderMonitorChart = () => {\n  if (!monitorContainer) {\n    monitorContainer = document.getElementById('monitorContainer');\n  }\n  monitorChart = echarts.init(monitorContainer);\n  monitorChart.setOption(getLineChartDataSet({ ...chartColors.value }));\n};\n\n// monitorChart\nlet countContainer: HTMLElement;\nlet countChart: echarts.ECharts;\nconst renderCountChart = () => {\n  if (!countContainer) {\n    countContainer = document.getElementById('countContainer');\n  }\n  countChart = echarts.init(countContainer);\n  countChart.setOption(getPieChartDataSet(chartColors.value));\n};\n\nconst renderCharts = () => {\n  renderMonitorChart();\n  renderCountChart();\n};\n\n// chartSize update\nconst updateContainer = () => {\n  if (\n    document.documentElement.clientWidth >= 1400 &&\n    document.documentElement.clientWidth < 1920\n  ) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 2080).toFixed(2)\n    );\n  } else if (document.documentElement.clientWidth < 1080) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 1080).toFixed(2)\n    );\n  } else {\n    resizeTime.value = 1;\n  }\n\n  monitorChart.resize({\n    width: monitorContainer.clientWidth,\n    height: resizeTime.value * 326\n  });\n  countChart.resize({\n    width: resizeTime.value * 326,\n    height: resizeTime.value * 326\n  });\n};\n\nonMounted(() => {\n  renderCharts();\n  nextTick(() => {\n    updateContainer();\n  });\n  window.addEventListener('resize', updateContainer, false);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateContainer);\n});\n\nconst currentMonth = ref(getThisMonth());\n\nwatch(\n  () => store.brandTheme,\n  () => {\n    changeChartsTheme([monitorChart, countChart]);\n  }\n);\n\nwatch(\n  () => store.mode,\n  () => {\n    [monitorChart, countChart].forEach(item => {\n      item.dispose();\n    });\n\n    renderCharts();\n  }\n);\n\nconst onCurrencyChange = (checkedValues: string[]) => {\n  currentMonth.value = getThisMonth(checkedValues);\n  monitorChart.setOption(\n    getLineChartDataSet({ dateTime: checkedValues, ...chartColors.value })\n  );\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dashboard-chart-card {\n  padding: 8px;\n  :deep(.t-card__header) {\n    padding-bottom: 24px;\n  }\n  :deep(.t-card__title) {\n    font-size: 20px;\n    font-weight: 500;\n  }\n}\n</style>\n","<template>\n  <t-row\n    :gutter=\"16\"\n    class=\"row-container\"\n  >\n    <t-col\n      :xs=\"12\"\n      :xl=\"6\"\n    >\n      <t-card\n        title=\"销售订单排名\"\n        class=\"dashboard-rank-card\"\n      >\n        <template #actions>\n          <t-radio-group default-value=\"dateVal\">\n            <t-radio-button value=\"dateVal\">本周</t-radio-button>\n            <t-radio-button value=\"monthVal\">近三个月</t-radio-button>\n          </t-radio-group>\n        </template>\n        <t-table\n          :data=\"SALE_TEND_LIST\"\n          :columns=\"SALE_COLUMNS\"\n          row-key=\"productName\"\n        >\n          <template #index=\"{ rowIndex }\">\n            <span :class=\"getRankClass(rowIndex)\">\n              {{ rowIndex + 1 }}\n            </span>\n          </template>\n          <template #growUp=\"{ row }\">\n            <span>\n              <trend\n                :type=\"row.growUp > 0 ? 'up' : 'down'\"\n                :describe=\"Math.abs(row.growUp)\"\n              />\n            </span>\n          </template>\n          <template #operation=\"slotProps\">\n            <a\n              class=\"t-button-link\"\n              @click=\"rehandleClickOp(slotProps)\"\n            >\n              详情\n            </a>\n          </template>\n        </t-table>\n      </t-card>\n    </t-col>\n    <t-col\n      :xs=\"12\"\n      :xl=\"6\"\n    >\n      <t-card\n        title=\"销售订单排名\"\n        class=\"dashboard-rank-card\"\n      >\n        <template #actions>\n          <t-radio-group default-value=\"dateVal\">\n            <t-radio-button value=\"dateVal\">本周</t-radio-button>\n            <t-radio-button value=\"monthVal\">近三个月</t-radio-button>\n          </t-radio-group>\n        </template>\n        <t-table\n          :data=\"BUY_TEND_LIST\"\n          :columns=\"BUY_COLUMNS\"\n          row-key=\"productName\"\n        >\n          <template #index=\"{ rowIndex }\">\n            <span :class=\"getRankClass(rowIndex)\">\n              {{ rowIndex + 1 }}\n            </span>\n          </template>\n          <template #growUp=\"{ row }\">\n            <trend\n              :type=\"row.growUp > 0 ? 'up' : 'down'\"\n              :describe=\"Math.abs(row.growUp)\"\n            />\n          </template>\n          <template #operation=\"slotProps\">\n            <a\n              class=\"t-button-link\"\n              @click=\"rehandleClickOp(slotProps)\"\n            >\n              详情\n            </a>\n          </template>\n        </t-table>\n      </t-card>\n    </t-col>\n  </t-row>\n</template>\n\n<script setup lang=\"ts\">\n// 导入样式\nimport Trend from '@/components/trend/index.vue';\n\nimport {\n  SALE_TEND_LIST,\n  BUY_TEND_LIST,\n  SALE_COLUMNS,\n  BUY_COLUMNS\n} from '../constants';\n\nconst rehandleClickOp = (val: MouseEvent) => {\n  console.log(val);\n};\nconst getRankClass = (index: number) => {\n  return ['dashboard-rank', { 'dashboard-rank__top': index < 3 }];\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dashboard-rank-card {\n  padding: 8px;\n  :deep(.t-card__header) {\n    padding-bottom: 24px;\n  }\n  :deep(.t-card__title) {\n    font-size: 20px;\n    font-weight: 500;\n  }\n}\n.dashboard-rank__cell {\n  display: inline-flex;\n  width: 24px;\n  height: 24px;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n  background-color: var(--td-gray-color-5);\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  &--top {\n    background: var(--td-brand-color);\n  }\n}\n</style>\n","<template>\n  <t-card>\n    <t-row>\n      <t-col\n        :xs=\"12\"\n        :xl=\"9\"\n      >\n        <t-card\n          :bordered=\"false\"\n          title=\"出入库概览\"\n          subtitle=\"(件)\"\n          :class=\"{ 'dashboard-overview-card': true, 'overview-panel': true }\"\n        >\n          <template #actions>\n            <t-date-range-picker\n              class=\"card-date-picker-container\"\n              theme=\"primary\"\n              mode=\"date\"\n              :default-value=\"LAST_7_DAYS\"\n              @change=\"onStokeDataChange\"\n            />\n          </template>\n          <div\n            id=\"stokeContainer\"\n            ref=\"stokeContainer\"\n            style=\"width: 100%; height: 351px\"\n            class=\"dashboard-chart-container\"\n          ></div>\n        </t-card>\n      </t-col>\n      <t-col\n        :xs=\"12\"\n        :xl=\"3\"\n      >\n        <t-card\n          :bordered=\"false\"\n          :class=\"{ 'dashboard-overview-card': true, 'export-panel': true }\"\n        >\n          <template #actions>\n            <t-button>导出数据</t-button>\n          </template>\n          <t-row>\n            <t-col\n              :xs=\"6\"\n              :xl=\"12\"\n            >\n              <t-card\n                :bordered=\"false\"\n                subtitle=\"本月出库总计（件）\"\n                class=\"inner-card\"\n              >\n                <div class=\"inner-card__content\">\n                  <div class=\"inner-card__content-title\">1726</div>\n                  <div class=\"inner-card__content-footer\">\n                    自从上周以来\n                    <trend\n                      class=\"trend-tag\"\n                      type=\"down\"\n                      :is-reverse-color=\"false\"\n                      describe=\"20.3%\"\n                    />\n                  </div>\n                </div>\n              </t-card>\n            </t-col>\n            <t-col\n              :xs=\"6\"\n              :xl=\"12\"\n            >\n              <t-card\n                :bordered=\"false\"\n                subtitle=\"本月入库总计（件）\"\n                class=\"inner-card\"\n              >\n                <div class=\"inner-card__content\">\n                  <div class=\"inner-card__content-title\">226</div>\n                  <div class=\"inner-card__content-footer\">\n                    自从上周以来\n                    <trend\n                      class=\"trend-tag\"\n                      type=\"down\"\n                      :is-reverse-color=\"false\"\n                      describe=\"20.3%\"\n                    />\n                  </div>\n                </div>\n              </t-card>\n            </t-col>\n          </t-row>\n        </t-card>\n      </t-col>\n    </t-row>\n  </t-card>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'DashboardBase'\n};\n</script>\n\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  LegendComponent,\n  GridComponent\n} from 'echarts/components';\nimport { LineChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { useSettingStore } from '@/store';\nimport { LAST_7_DAYS } from '@/utils/date';\nimport { changeChartsTheme } from '@/utils/color';\n\n// 导入样式\nimport Trend from '@/components/trend/index.vue';\nimport { constructInitDataset } from '../index';\n\necharts.use([\n  TooltipComponent,\n  LegendComponent,\n  GridComponent,\n  LineChart,\n  CanvasRenderer\n]);\n\nconst store = useSettingStore();\nconst resizeTime = ref(1);\n\nconst chartColors = computed(() => store.chartColors);\n\n// stokeCharts\nlet stokeContainer: HTMLElement;\nlet stokeChart: echarts.ECharts;\nconst renderStokeChart = () => {\n  if (!stokeContainer) {\n    stokeContainer = document.getElementById('stokeContainer');\n  }\n  stokeChart = echarts.init(stokeContainer);\n  stokeChart.setOption(\n    constructInitDataset({ dateTime: LAST_7_DAYS, ...chartColors.value })\n  );\n};\n\nconst renderCharts = () => {\n  renderStokeChart();\n};\n\n// chartSize update\nconst updateContainer = () => {\n  if (\n    document.documentElement.clientWidth >= 1400 &&\n    document.documentElement.clientWidth < 1920\n  ) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 2080).toFixed(2)\n    );\n  } else if (document.documentElement.clientWidth < 1080) {\n    resizeTime.value = Number(\n      (document.documentElement.clientWidth / 1080).toFixed(2)\n    );\n  } else {\n    resizeTime.value = 1;\n  }\n\n  stokeChart.resize({\n    width: stokeContainer.clientWidth,\n    height: stokeContainer.clientHeight\n  });\n};\n\nonMounted(() => {\n  renderCharts();\n  nextTick(() => {\n    updateContainer();\n  });\n  window.addEventListener('resize', updateContainer, false);\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateContainer);\n});\n\nwatch(\n  () => store.brandTheme,\n  () => {\n    changeChartsTheme([stokeChart]);\n  }\n);\n\nwatch(\n  () => store.mode,\n  () => {\n    [stokeChart].forEach(item => {\n      item.dispose();\n    });\n\n    renderCharts();\n  }\n);\n\nconst onStokeDataChange = (checkedValues: string[]) => {\n  stokeChart.setOption(\n    constructInitDataset({ dateTime: checkedValues, ...chartColors.value })\n  );\n};\n</script>\n\n<style lang=\"less\" scoped>\n.dashboard-overview-card {\n  :deep(.t-card__header) {\n    padding-bottom: 24px;\n  }\n  :deep(.t-card__title) {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  &.overview-panel {\n    border-right: none;\n  }\n  &.export-panel {\n    border-left: none;\n  }\n}\n.inner-card {\n  padding: 24px 0;\n  :deep(.t-card__header) {\n    padding-bottom: 0;\n  }\n  &__content {\n    &-title {\n      font-size: 36px;\n      line-height: 44px;\n    }\n    &-footer {\n      display: flex;\n      align-items: center;\n      line-height: 22px;\n      color: var(--td-text-color-placeholder);\n      .trend-tag {\n        margin-left: 4px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div>\n    <!-- 顶部 card  -->\n    <top-panel class=\"row-container\" />\n    <!-- 中部图表  -->\n    <middle-chart class=\"row-container\" />\n    <!-- 列表排名 -->\n    <rank-list class=\"row-container\" />\n    <!-- 出入库概览 -->\n    <over-view class=\"row-container\" />\n  </div>\n</template>\n<route lang=\"json\">\n{\n  \"meta\": { \"title\": \"概览仪表盘\" }\n}\n</route>\n<script lang=\"ts\">\nexport default {\n  name: 'DashboardBase'\n};\n</script>\n\n<script setup lang=\"ts\">\nimport TopPanel from './components/top-panel.vue';\nimport MiddleChart from './components/middle-chart.vue';\nimport RankList from './components/rank-list.vue';\nimport OverView from './components/overview.vue';\n</script>\n\n<style scoped>\n.row-container {\n  margin-bottom: 16px;\n}\n</style>\n"],"names":["constructInitDashboardDataset","type","datasetAxis","xAxis","show","data","yAxis","grid","top","left","right","bottom","__spreadProps","color","series","showSymbol","symbol","symbolSize","markPoint","name","getChartListColor","value","barWidth","constructInitDataset","dateTime","placeholderColor","borderColor","timeArray","inArray","outArray","i","length","dateAbsTime","Date","getTime","enhandTime","push","dayjs","format","subtract","getRandomArray","toString","tooltip","trigger","axisLabel","axisLine","lineStyle","width","splitLine","legend","icon","itemWidth","itemHeight","itemGap","textStyle","fontSize","orient","getLineChartDataSet","containLabel","boundaryGap","smooth","PANE_LIST","title","number","upTrend","leftType","downTrend","SALE_TEND_LIST","growUp","productName","count","date","BUY_TEND_LIST","SALE_COLUMNS","align","colKey","fixed","ellipsis","BUY_COLUMNS","echarts.use","LineChart","BarChart","CanvasRenderer","store","useSettingStore","resizeTime","ref","moneyContainer","moneyChart","refundContainer","refundChart","renderCharts","document","getElementById","echarts.init","setOption","updateContainer","documentElement","clientWidth","Number","toFixed","resize","height","onMounted","nextTick","window","addEventListener","onUnmounted","removeEventListener","watch","brandTheme","changeChartsTheme","mode","forEach","item","dispose","use","TooltipComponent","LegendComponent","PieChart","GridComponent","getThisMonth","checkedValues","getFullYear","getMonth","date2","startMonth","endMonth","chartColors","computed","monitorContainer","monitorChart","countContainer","countChart","renderCountChart","radius","textColor","containerColor","position","selectedMode","avoidLabelOverlap","silent","label","formatter","join","rich","fontWeight","lineHeight","emphasis","labelLine","getPieChartDataSet","__spreadValues","currentMonth","onCurrencyChange","getRankClass","index","dashboard-rank__top","stokeContainer","stokeChart","LAST_7_DAYS","clientHeight","onStokeDataChange"],"mappings":"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"}