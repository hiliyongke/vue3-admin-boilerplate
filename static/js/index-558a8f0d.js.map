{"version":3,"file":"index-558a8f0d.js","sources":["../../../src/pages/dashboard/detail/index.ts","../../../src/pages/dashboard/detail/constants.ts","../../../src/pages/dashboard/detail/index.vue"],"sourcesContent":["import dayjs from 'dayjs';\nimport { TChartColor } from '@/config/color';\nimport { getChartListColor } from '@/utils/color';\nimport { getRandomArray, getDateArray } from '@/utils/charts';\n\n/**\n * 散点图数据\n *\n * @export\n * @returns {}\n */\nexport function getScatterDataSet({\n  dateTime = [],\n  placeholderColor,\n  borderColor\n}: { dateTime?: Array<string> } & TChartColor) {\n  const divideNum = 40;\n  const timeArray = [];\n  const inArray = [];\n  const outArray = [];\n  for (let i = 0; i < divideNum; i++) {\n    // const [timeArray, inArray, outArray] = dataset;\n    if (dateTime.length > 0) {\n      const dateAbsTime: number =\n        (new Date(dateTime[1]).getTime() - new Date(dateTime[0]).getTime()) /\n        divideNum;\n      const endTime: number = new Date(dateTime[0]).getTime() + dateAbsTime * i;\n      timeArray.push(dayjs(endTime).format('MM-DD'));\n    } else {\n      timeArray.push(\n        dayjs()\n          .subtract(divideNum - i, 'day')\n          .format('MM-DD')\n      );\n    }\n\n    inArray.push(getRandomArray().toString());\n    outArray.push(getRandomArray().toString());\n  }\n\n  return {\n    color: getChartListColor(),\n    xAxis: {\n      data: timeArray,\n      axisLabel: {\n        color: placeholderColor\n      },\n      splitLine: { show: false },\n      axisLine: {\n        lineStyle: {\n          color: borderColor,\n          width: 1\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      // splitLine: { show: false},\n      axisLabel: {\n        color: placeholderColor\n      },\n      nameTextStyle: {\n        padding: [0, 0, 0, 60]\n      },\n      axisTick: {\n        show: false,\n        axisLine: {\n          show: false\n        }\n      },\n      axisLine: {\n        show: false\n      },\n      splitLine: {\n        lineStyle: {\n          color: borderColor\n        }\n      }\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    grid: {\n      top: '5px',\n      left: '25px',\n      right: '5px',\n      bottom: '60px'\n    },\n    legend: {\n      left: 'center',\n      bottom: '0',\n      orient: 'horizontal', // legend 横向布局。\n      data: ['按摩仪', '咖啡机'],\n      itemHeight: 8,\n      itemWidth: 8,\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      }\n    },\n    series: [\n      {\n        name: '按摩仪',\n        symbolSize: 10,\n        data: outArray.reverse(),\n        type: 'scatter'\n      },\n      {\n        name: '咖啡机',\n        symbolSize: 10,\n        data: inArray.concat(inArray.reverse()),\n        type: 'scatter'\n      }\n    ]\n  };\n}\n\n/** 折线图数据 */\nexport function getFolderLineDataSet({\n  dateTime = [],\n  placeholderColor,\n  borderColor\n}: { dateTime?: Array<string> } & TChartColor) {\n  let dateArray: Array<string> = [\n    '周一',\n    '周二',\n    '周三',\n    '周四',\n    '周五',\n    '周六',\n    '周日'\n  ];\n  if (dateTime.length > 0) {\n    const divideNum = 7;\n    dateArray = getDateArray(dateTime, divideNum);\n  }\n  return {\n    color: getChartListColor(),\n    grid: {\n      top: '5%',\n      right: '10px',\n      left: '30px',\n      bottom: '60px'\n    },\n    legend: {\n      left: 'center',\n      bottom: '0',\n      orient: 'horizontal', // legend 横向布局。\n      data: ['杯子', '茶叶', '蜂蜜', '面粉'],\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: dateArray,\n      boundaryGap: false,\n      axisLabel: {\n        color: placeholderColor\n      },\n      axisLine: {\n        lineStyle: {\n          color: borderColor,\n          width: 1\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: placeholderColor\n      },\n      splitLine: {\n        lineStyle: {\n          color: borderColor\n        }\n      }\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    series: [\n      {\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8,\n        name: '杯子',\n        stack: '总量',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line'\n      },\n      {\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8,\n        name: '茶叶',\n        stack: '总量',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line'\n      },\n      {\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8,\n        name: '蜂蜜',\n        stack: '总量',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line'\n      },\n      {\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8,\n        name: '面粉',\n        stack: '总量',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line'\n      }\n    ]\n  };\n}\n","export const PANE_LIST_DATA = [\n  {\n    title: '总申请数（次）',\n    number: '1126',\n    upTrend: '10%'\n  },\n  {\n    title: '供应商数量（个）',\n    number: '13',\n    downTrend: '13%'\n  },\n  {\n    title: '采购商品品类（类）',\n    number: '4',\n    upTrend: '10%'\n  },\n  {\n    title: '申请人数量（人）',\n    number: 90,\n    downTrend: '44%',\n    leftType: 'icon-file-paste'\n  },\n  {\n    title: '申请完成率（%）',\n    number: 80.5,\n    upTrend: '70%'\n  },\n  {\n    title: '到货及时率（%）',\n    number: 78,\n    upTrend: '16%'\n  }\n];\n\nexport const PRODUCT_LIST = [\n  {\n    description:\n      'SSL证书又叫服务器证书，腾讯云为您提供证书的一站式服务，包括免费、付费证书的申请、管理及部',\n    index: 1,\n    isSetup: true,\n    name: 'SSL证书',\n    type: 4\n  },\n  {\n    description:\n      'SSL证书又叫服务器证书，腾讯云为您提供证书的一站式服务，包括免费、付费证书的申请、管理及部',\n    index: 1,\n    isSetup: true,\n    name: 'SSL证书',\n    type: 4\n  }\n];\n","<template>\n  <div class=\"dashboard-panel-detail\">\n    <t-card\n      title=\"本月采购申请情况\"\n      class=\"dashboard-detail-card\"\n    >\n      <t-row :gutter=\"[16, 16]\">\n        <t-col\n          v-for=\"(item, index) in PANE_LIST_DATA\"\n          :key=\"index\"\n          :xs=\"6\"\n          :xl=\"3\"\n        >\n          <t-card\n            class=\"dashboard-list-card\"\n            :description=\"item.title\"\n          >\n            <div class=\"dashboard-list-card__number\">{{ item.number }}</div>\n            <div class=\"dashboard-list-card__text\">\n              <div class=\"dashboard-list-card__text-left\">\n                环比\n                <trend\n                  class=\"icon\"\n                  :type=\"item.upTrend ? 'up' : 'down'\"\n                  :describe=\"item.upTrend || item.downTrend\"\n                />\n              </div>\n              <t-icon name=\"chevron-right\" />\n            </div>\n          </t-card>\n        </t-col>\n      </t-row>\n    </t-card>\n    <t-row\n      :gutter=\"[16, 16]\"\n      class=\"row-margin\"\n    >\n      <t-col\n        :xs=\"12\"\n        :xl=\"9\"\n      >\n        <t-card\n          class=\"dashboard-detail-card\"\n          title=\"采购商品申请趋势\"\n          subtitle=\"(件)\"\n        >\n          <template #actions>\n            <t-date-range-picker\n              class=\"card-date-picker-container\"\n              :default-value=\"LAST_7_DAYS\"\n              theme=\"primary\"\n              mode=\"date\"\n              style=\"width: 240px\"\n              @change=\"onMaterialChange\"\n            />\n          </template>\n          <div\n            id=\"lineContainer\"\n            style=\"width: 100%; height: 410px\"\n          ></div>\n        </t-card>\n      </t-col>\n      <t-col\n        :xs=\"12\"\n        :xl=\"3\"\n      >\n        <product-card\n          v-for=\"(item, index) in PRODUCT_LIST\"\n          :key=\"index\"\n          :product=\"item\"\n          :class=\"{ 'row-margin': index !== 0 }\"\n        />\n      </t-col>\n    </t-row>\n    <t-card\n      :class=\"['dashboard-detail-card', 'row-margin']\"\n      title=\"采购商品满意度分布\"\n    >\n      <template #actions>\n        <t-date-range-picker\n          class=\"card-date-picker-container\"\n          :default-value=\"LAST_7_DAYS\"\n          theme=\"primary\"\n          mode=\"date\"\n          style=\"display: inline-block; width: 240px; margin-right: 8px\"\n          @change=\"onSatisfyChange\"\n        />\n        <t-button class=\"card-date-button\">导出数据</t-button>\n      </template>\n      <div\n        id=\"scatterContainer\"\n        style=\"width: 100%; height: 330px\"\n      ></div>\n    </t-card>\n  </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'DashboardDetail'\n};\n</script>\n\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts/core';\nimport {\n  GridComponent,\n  TooltipComponent,\n  LegendComponent\n} from 'echarts/components';\nimport { LineChart, ScatterChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport ProductCard from '@/components/product-card/index.vue';\n\nimport { getFolderLineDataSet, getScatterDataSet } from './index';\nimport { PANE_LIST_DATA, PRODUCT_LIST } from './constants';\nimport { LAST_7_DAYS } from '@/utils/date';\nimport { useSettingStore } from '@/store';\nimport { changeChartsTheme } from '@/utils/color';\n\nimport Trend from '@/components/trend/index.vue';\n\necharts.use([\n  GridComponent,\n  LegendComponent,\n  TooltipComponent,\n  LineChart,\n  ScatterChart,\n  CanvasRenderer\n]);\n\nconst store = useSettingStore();\nconst chartColors = computed(() => store.chartColors);\n\n// lineChart logic\nlet lineContainer: HTMLElement;\nlet lineChart: echarts.ECharts;\nconst renderLineChart = () => {\n  lineContainer = document.getElementById('lineContainer');\n  lineChart = echarts.init(lineContainer);\n  lineChart.setOption(getFolderLineDataSet({ ...chartColors.value }));\n};\n\n// scatterChart logic\nlet scatterContainer: HTMLElement;\nlet scatterChart: echarts.ECharts;\nconst renderScatterChart = () => {\n  scatterContainer = document.getElementById('scatterContainer');\n  scatterChart = echarts.init(scatterContainer);\n  scatterChart.setOption(getScatterDataSet({ ...chartColors.value }));\n};\n\n// chartSize update\nconst updateContainer = () => {\n  lineChart?.resize({\n    width: lineContainer.clientWidth,\n    height: lineContainer.clientHeight\n  });\n  scatterChart?.resize({\n    width: scatterContainer.clientWidth,\n    height: scatterContainer.clientHeight\n  });\n};\n\nconst renderCharts = () => {\n  renderScatterChart();\n  renderLineChart();\n};\n\nonMounted(() => {\n  renderCharts();\n  window.addEventListener('resize', updateContainer, false);\n  nextTick(() => {\n    updateContainer();\n  });\n});\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateContainer);\n});\n\nwatch(\n  () => store.mode,\n  () => {\n    renderCharts();\n  }\n);\n\nwatch(\n  () => store.brandTheme,\n  () => {\n    changeChartsTheme([lineChart, scatterChart]);\n  }\n);\n\nconst onSatisfyChange = () => {\n  scatterChart.setOption(getScatterDataSet({ ...chartColors.value }));\n};\n\nconst onMaterialChange = (value: string[]) => {\n  const chartColors = computed(() => store.chartColors);\n  lineChart.setOption(\n    getFolderLineDataSet({ dateTime: value, ...chartColors.value })\n  );\n};\n</script>\n\n<style lang=\"less\" scoped>\n.row-margin {\n  margin-top: 16px;\n}\n\n// 统一增加8px;\n.dashboard-detail-card {\n  padding: 8px;\n  :deep(.t-card__title) {\n    font-size: 20px;\n    font-weight: 500;\n  }\n  :deep(.t-card__actions) {\n    display: flex;\n    align-items: center;\n  }\n}\n.dashboard-list-card {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  height: 170px;\n  padding: 8px;\n  :deep(.t-card__header) {\n    padding-bottom: 8px;\n  }\n  :deep(.t-card__body) {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n  &.dark {\n    &:hover {\n      cursor: pointer;\n      background: var(--td-gray-color-14);\n    }\n  }\n  &.light {\n    &:hover {\n      cursor: pointer;\n      background: var(--td-gray-color-14);\n    }\n  }\n  &__number {\n    font-size: 36px;\n    line-height: 44px;\n    color: var(--td-text-color-primary);\n  }\n  &__text {\n    display: flex;\n    font-size: 14px;\n    line-height: 18px;\n    color: var(--td-text-color-placeholder);\n    text-align: left;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    &-left {\n      display: flex;\n      .icon {\n        margin: 0 8px;\n      }\n    }\n  }\n}\n</style>\n"],"names":["getScatterDataSet","dateTime","placeholderColor","borderColor","timeArray","inArray","outArray","i","length","dateAbsTime","Date","getTime","endTime","push","dayjs","format","subtract","getRandomArray","toString","color","getChartListColor","xAxis","data","axisLabel","splitLine","show","axisLine","lineStyle","width","yAxis","type","nameTextStyle","padding","axisTick","tooltip","trigger","grid","top","left","right","bottom","legend","orient","itemHeight","itemWidth","textStyle","fontSize","series","name","symbolSize","reverse","concat","getFolderLineDataSet","dateArray","getDateArray","boundaryGap","showSymbol","symbol","stack","PANE_LIST_DATA","title","number","upTrend","downTrend","leftType","PRODUCT_LIST","description","index","isSetup","use","GridComponent","LegendComponent","TooltipComponent","LineChart","ScatterChart","CanvasRenderer","store","useSettingStore","chartColors","computed","lineContainer","lineChart","scatterContainer","scatterChart","updateContainer","resize","clientWidth","height","clientHeight","renderCharts","document","getElementById","echarts.init","setOption","__spreadValues","value","onMounted","window","addEventListener","nextTick","onUnmounted","removeEventListener","watch","mode","brandTheme","changeChartsTheme","onSatisfyChange","onMaterialChange","chartColors2"],"mappings":"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"}