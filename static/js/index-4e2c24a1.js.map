{"version":3,"file":"index-4e2c24a1.js","sources":["../../../src/components/workflow/add-node-btn.vue","../../../src/components/workflow/col-box.vue","../../../src/components/workflow/node-wrap-box.vue","../../../src/components/workflow/node-main.vue","../../../src/components/workflow/index.vue","../../../src/pages/demo/workflow/index.vue"],"sourcesContent":["<template>\n  <div class=\"add-node-btn-box\">\n    <div class=\"add-node-btn\">\n      <t-popup>\n        <template #content>\n          <div class=\"popover-inner-content\">\n            <div @click=\"add('approver')\">审批人</div>\n            <div @click=\"add('notifier')\">抄送人</div>\n            <div @click=\"add('branch')\">条件分支</div>\n          </div>\n        </template>\n        <button class=\"btn\"><span>+</span></button>\n      </t-popup>\n    </div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nconst props = defineProps({\n  node: {\n    type: Object,\n    default: () => {}\n  },\n  addNode: {\n    type: Function,\n    default: () => null\n  }\n});\nconst add = type => {\n  props.addNode({ nodeId: props.node.nodeId, type });\n};\n</script>\n","<template>\n  <div class=\"col-box\">\n    <div\n      v-if=\"index === 0\"\n      class=\"top-left-cover-line\"\n    ></div>\n    <div\n      v-if=\"index === 0\"\n      class=\"bottom-left-cover-line\"\n    ></div>\n    <div class=\"condition-node\">\n      <div class=\"condition-node-box\">\n        <div class=\"auto-judge\">\n          <div class=\"title-wrapper\">\n            <span class=\"editable-title\">\n              <input\n                v-model=\"node.name\"\n                type=\"text\"\n              />\n            </span>\n            <span class=\"priority-title\">优先级{{ index + 1 }}</span>\n            <span\n              class=\"svg-icon close\"\n              @click=\"emit('delBranch', index)\"\n            >\n              删除\n            </span>\n          </div>\n          <div\n            class=\"content-wrapper\"\n            @click=\"handle\"\n          >\n            <div class=\"content\">请设置条件</div>\n          </div>\n        </div>\n        <add-node-btn\n          :node=\"node\"\n          :add-node=\"addNode\"\n          :delete-node=\"deleteNode\"\n        />\n      </div>\n    </div>\n    <NodeMain\n      v-if=\"node && node.childNode\"\n      :node=\"node.childNode\"\n      :add-node=\"addNode\"\n      :delete-node=\"deleteNode\"\n    />\n    <div\n      v-if=\"index === parentLength - 1\"\n      class=\"top-right-cover-line\"\n    ></div>\n    <div\n      v-if=\"index === parentLength - 1\"\n      class=\"bottom-right-cover-line\"\n    ></div>\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport AddNodeBtn from './add-node-btn.vue';\nimport NodeMain from './node-main.vue';\n\nconst props = defineProps({\n  node: {\n    type: Object,\n    default: () => null\n  },\n  index: {\n    type: Number\n  },\n  parentLength: {\n    type: Number\n  },\n  addNode: {\n    type: Function,\n    default: () => null\n  },\n  deleteNode: {\n    type: Function,\n    default: () => null\n  }\n});\nconst emit = defineEmits(['delBranch']);\nconst handle = () => {\n  console.log(props.node);\n};\n</script>\n","<template>\n  <div class=\"node-wrap-box\">\n    <div>\n      <div\n        class=\"title\"\n        :class=\"[node.type]\"\n      >\n        {{ node.name }}\n        <span @click=\"deleteNode(node.nodeId)\">删除</span>\n      </div>\n      <div\n        class=\"content\"\n        @click=\"handle\"\n      >\n        所有人 >\n      </div>\n    </div>\n\n    <t-drawer\n      v-model:visible=\"showDrawer\"\n      :header=\"node.name\"\n      :width=\"520\"\n      @close=\"\n        () => {\n          showDrawer = false;\n        }\n      \"\n    >\n      <t-form\n        ref=\"ruleForm\"\n        :model=\"ruleForm\"\n      >\n        <t-form-item\n          ref=\"name\"\n          :label=\"node.type === 'approver' ? '审批人' : '抄送人'\"\n          name=\"xx\"\n        >\n          <t-radio-group>\n            <t-radio-button :value=\"1\">指定成员</t-radio-button>\n            <t-radio-button\n              v-if=\"node.type !== 'notifier'\"\n              :value=\"2\"\n            >\n              指定岗位\n            </t-radio-button>\n            <t-radio-button :value=\"3\">发起人主管</t-radio-button>\n          </t-radio-group>\n        </t-form-item>\n        <t-form-item\n          ref=\"name\"\n          label=\"审批方式\"\n          name=\"name\"\n        >\n          <t-radio-group>\n            <t-radio-button value=\"a\">会审</t-radio-button>\n            <t-radio-button value=\"b\">或审</t-radio-button>\n          </t-radio-group>\n        </t-form-item>\n      </t-form>\n    </t-drawer>\n  </div>\n</template>\n<script setup lang=\"ts\">\ndefineProps({\n  node: {\n    type: Object,\n    default: () => null\n  },\n  deleteNode: {\n    type: Function,\n    default: () => null\n  }\n});\n\nconst showDrawer = ref(false);\nconst ruleForm = ref({});\nconst handle = () => {\n  showDrawer.value = true;\n  ruleForm.value = {};\n};\n</script>\n","<template>\n  <div\n    v-if=\"node && node.nodeId && node.childNode && node.conditionNodes\"\n    class=\"branch-and-node-wrap\"\n  >\n    <div class=\"branch-wrap\">\n      <div class=\"branch-wrap-box\">\n        <div class=\"branch-box\">\n          <button\n            class=\"add-branch\"\n            @click=\"addBranch(node)\"\n          >\n            添加条件\n          </button>\n          <col-box\n            v-for=\"(branch, idx) in node.conditionNodes\"\n            :key=\"branch.nodeId\"\n            :index=\"idx\"\n            :node=\"branch\"\n            :add-node=\"addNode\"\n            :delete-node=\"deleteNode\"\n            :parent-length=\"node.conditionNodes.length\"\n            @del-branch=\"delBranch(node, $event)\"\n          />\n        </div>\n        <add-node-btn\n          :node=\"node\"\n          :add-node=\"addNode\"\n          :delete-node=\"deleteNode\"\n        />\n      </div>\n    </div>\n    <div v-if=\"node.childNode.type === 'branch'\">\n      <node-main\n        :node=\"node.childNode\"\n        :add-node=\"addNode\"\n        :delete-node=\"deleteNode\"\n      />\n    </div>\n    <div\n      v-else\n      class=\"node-wrap\"\n    >\n      <node-wrap-box\n        :node=\"node.childNode\"\n        :delete-node=\"deleteNode\"\n      />\n      <add-node-btn\n        :node=\"node.childNode\"\n        :add-node=\"addNode\"\n        :delete-node=\"deleteNode\"\n      />\n      <node-main\n        v-if=\"node.childNode.childNode\"\n        :node=\"node.childNode.childNode\"\n        :add-node=\"addNode\"\n        :delete-node=\"deleteNode\"\n      />\n    </div>\n  </div>\n  <div\n    v-else-if=\"node && node.nodeId\"\n    :class=\"[node.type === 'branch' ? 'branch-wrap' : 'node-wrap']\"\n  >\n    <div\n      v-if=\"node.type === 'branch'\"\n      class=\"branch-wrap-box\"\n    >\n      <div class=\"branch-wrap-box\">\n        <div class=\"branch-box\">\n          <button\n            class=\"add-branch\"\n            @click=\"addBranch(node)\"\n          >\n            添加条件\n          </button>\n          <col-box\n            v-for=\"(branch, idx) in node.conditionNodes\"\n            :key=\"branch.nodeId\"\n            :index=\"idx\"\n            :node=\"branch\"\n            :parent-length=\"node.conditionNodes.length\"\n            :add-node=\"addNode\"\n            :delete-node=\"deleteNode\"\n            @del-branch=\"delBranch(node, $event)\"\n          />\n        </div>\n\n        <add-node-btn\n          :node=\"node\"\n          :add-node=\"addNode\"\n          :delete-node=\"deleteNode\"\n        />\n      </div>\n    </div>\n    <node-wrap-box\n      v-else\n      :node=\"node\"\n      :delete-node=\"deleteNode\"\n    />\n    <add-node-btn\n      v-if=\"node.type !== 'branch'\"\n      :node=\"node\"\n      :add-node=\"addNode\"\n      :delete-node=\"deleteNode\"\n    />\n    <node-main\n      v-if=\"node.childNode\"\n      :node=\"node.childNode\"\n      :add-node=\"addNode\"\n      :delete-node=\"deleteNode\"\n    />\n  </div>\n</template>\n<script setup lang=\"ts\">\nimport addNodeBtn from './add-node-btn.vue';\nimport colBox from './col-box.vue';\nimport nodeWrapBox from './node-wrap-box.vue';\nconst getRandom = () => {\n  return Math.floor(\n    (Math.random() + Math.floor(Math.random() * 9 + 1)) * Math.pow(10, 9)\n  );\n};\n\nconst props = defineProps({\n  node: {\n    type: Object,\n    default: () => null\n  },\n  addNode: {\n    type: Function,\n    default: () => null\n  },\n  deleteNode: {\n    type: Function,\n    default: () => null\n  }\n});\n\nconst addBranch = childNode => {\n  childNode.conditionNodes.push({\n    name: `条件${childNode.conditionNodes.length + 1}`,\n    type: 'condition',\n    prevId: childNode.nodeId,\n    nodeId: getRandom()\n  });\n};\nconst delBranch = (node, idx) => {\n  if (node.conditionNodes.length <= 2) {\n    props.deleteNode(node.nodeId);\n  } else {\n    node.conditionNodes.splice(idx, 1);\n    /* 删除分支时将此分支下节点移动至其他分支  如开启此功能将以下注释打开 */\n    if (node.conditionNodes[idx].childNode) {\n      const copy = node.conditionNodes[idx].childNode || null;\n      node.conditionNodes.splice(idx, 1);\n      if (!node.conditionNodes[0].childNode && copy) {\n        node.conditionNodes[0].childNode = copy;\n      }\n    }\n  }\n};\n</script>\n","<template>\n  <div>\n    <div class=\"container\">\n      <div style=\"position: absolute; right: 40px; z-index: 100\">\n        <button\n          style=\"\n            width: 50px;\n            height: 50px;\n            font-size: 30px;\n            background-color: grey;\n            border-radius: 25px;\n          \"\n          @click=\"changeScale(+step)\"\n        >\n          +\n        </button>\n        <button\n          style=\"\n            width: 50px;\n\n            height: 50px;\n            font-size: 30px;\n            background-color: grey;\n            border-radius: 25px;\n          \"\n          @click=\"changeScale(-step)\"\n        >\n          -\n        </button>\n      </div>\n      <div :style=\"`transform: scale(${scaleVal / 100})`\">\n        <div class=\"node-wrap\">\n          <div class=\"node-wrap-box\">\n            <div>\n              <div class=\"title\">{{ modelValue && modelValue.name }}</div>\n              <div class=\"content\">所有人 ></div>\n            </div>\n          </div>\n          <add-node-btn\n            :node=\"modelValue\"\n            :add-node=\"addNode\"\n          />\n        </div>\n\n        <node-main\n          v-if=\"modelValue && modelValue.childNode\"\n          :node=\"modelValue.childNode\"\n          :add-node=\"addNode\"\n          :delete-node=\"deleteNode\"\n        />\n\n        <div class=\"end-node\">\n          <div class=\"end-node-circle\"></div>\n          <div class=\"end-node-text\">流程结束</div>\n        </div>\n\n        <div class=\"submit\">\n          <t-button @click=\"preview\">预览</t-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport addNodeBtn from './add-node-btn.vue';\nimport nodeMain from './node-main.vue';\nimport './index.less';\n\nconst getRandom = () => {\n  return Math.floor(\n    (Math.random() + Math.floor(Math.random() * 9 + 1)) * Math.pow(10, 9)\n  );\n};\nconst props = defineProps({\n  modelValue: {\n    type: Object,\n    default: () => {}\n  }\n});\n\nconst emit = defineEmits(['input']);\n\nconst scaleVal = ref(100); // 流程图缩放比例 100%\nconst step = ref('5');\nconst changeScale = val => {\n  let v = scaleVal.value + val;\n  if (v > 0 && v <= 200) {\n    // 缩放介于0%~200%\n    scaleVal.value = v;\n  }\n};\nconst preview = () => {\n  validator(props.modelValue);\n};\nconst addNode = option => {\n  getNode(props.modelValue, option.nodeId, node => {\n    /* 新增分支 */\n    if (option.type === 'branch') {\n      const nodeId = getRandom();\n      const conditionNodes = [];\n      for (let i = 0; i < 2; i++) {\n        conditionNodes.push({\n          name: `条件${i + 1}`,\n          type: 'condition',\n          prevId: nodeId,\n          nodeId: getRandom()\n        });\n      }\n      node.childNode = {\n        type: option.type,\n        prevId: node.nodeId,\n        nodeId,\n        conditionNodes\n      };\n      emit('input', JSON.parse(JSON.stringify(props.modelValue)));\n    } else {\n      /* 新增节点 */\n      const nodeObj = {\n        type: option.type,\n        name: option.type === 'approver' ? '审批人' : '抄送人',\n        prevId: node.nodeId,\n        nodeId: getRandom()\n      };\n      if (node.childNode) {\n        nodeObj.childNode = Object.assign({}, node.childNode);\n      }\n      node.childNode = nodeObj;\n      emit('input', JSON.parse(JSON.stringify(props.modelValue)));\n    }\n  });\n};\nconst deleteNode = nodeId => {\n  del(props.modelValue, nodeId);\n  emit('input', JSON.parse(JSON.stringify(props.modelValue)));\n};\n/* 根据 nodeId 查找对应的节点并执行回调 */\nconst getNode = (data, nodeId, call) => {\n  if (data.type === 'branch') {\n    if (data.nodeId === nodeId) {\n      call(data);\n    } else {\n      data.childNode && getNode(data.childNode, nodeId, call);\n    }\n    data.conditionNodes.map(d => {\n      if (d.nodeId === nodeId) {\n        call(d);\n      } else {\n        d.childNode && getNode(d.childNode, nodeId, call);\n      }\n    });\n  } else {\n    if (data.nodeId === nodeId) {\n      call(data);\n    } else {\n      data.childNode && getNode(data.childNode, nodeId, call);\n    }\n  }\n};\nconst del = (data, nodeId) => {\n  if (data.childNode) {\n    if (data.childNode.conditionNodes) {\n      for (let i in data.childNode.conditionNodes) {\n        del(data.childNode.conditionNodes[i], nodeId);\n      }\n    }\n    if (data.childNode.nodeId === nodeId) {\n      var copy = data.childNode.childNode || null;\n      delete data.childNode;\n      copy && (data.childNode = copy);\n    } else {\n      del(data.childNode, nodeId);\n    }\n  }\n};\nconst validator = data => {\n  if (data.childNode) {\n    if (data.childNode.conditionNodes) {\n      for (let i in data.childNode.conditionNodes) {\n        console.log(data.childNode.conditionNodes[i].name);\n        validator(data.childNode.conditionNodes[i]);\n      }\n    }\n    validator(data.childNode);\n  }\n};\n</script>\n","<template>\n  <workflow v-model=\"dataSource\" />\n</template>\n<script setup lang=\"ts\">\nimport workflow from '@/components/workflow/index.vue';\n\nconst dataSource = ref({\n  name: '发起人',\n  type: 'start',\n  nodeId: -1,\n  childNode: {\n    type: 'branch',\n    prevId: -1,\n    nodeId: 1962370654,\n    conditionNodes: [\n      {\n        name: '条件1',\n        type: 'condition',\n        prevId: 1962370654,\n        nodeId: 8724388758\n      },\n      {\n        name: '条件2',\n        type: 'condition',\n        prevId: 1962370654,\n        nodeId: 6955647539,\n        childNode: {\n          type: 'branch',\n          prevId: 6955647539,\n          nodeId: 6579100235,\n          conditionNodes: [\n            {\n              name: '条件1',\n              type: 'condition',\n              prevId: 6579100235,\n              nodeId: 7943358411\n            },\n            {\n              name: '条件2',\n              type: 'condition',\n              prevId: 6579100235,\n              nodeId: 9245914757\n            }\n          ],\n          childNode: {\n            type: 'approver',\n            name: '审批人',\n            prevId: 6579100235,\n            nodeId: 2573062896\n          }\n        }\n      }\n    ]\n  }\n});\n</script>\n"],"names":["add","type","props","addNode","nodeId","node","handle","showDrawer","ref","ruleForm","value","addBranch","childNode","conditionNodes","push","name","length","prevId","Math","floor","random","pow","delBranch","idx","deleteNode","splice","copy","getRandom","scaleVal","step","changeScale","val","v","preview","validator","modelValue","option","getNode","i","emit","JSON","parse","stringify","nodeObj","Object","assign","del","data","call","map","d","dataSource"],"mappings":"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"}