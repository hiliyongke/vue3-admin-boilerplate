{"version":3,"file":"index-085ebc63.js","sources":["../../../src/pages/detail/deploy/index.ts","../../../src/pages/detail/deploy/constants.ts","../../../src/pages/detail/deploy/index.vue"],"sourcesContent":["import { TChartColor } from '@/config/color';\nimport { getChartListColor } from '@/utils/color';\nimport { getRandomArray, getDateArray } from '@/utils/charts';\n\n/** 平滑图数据 */\nexport function getSmoothLineDataSet({\n  dateTime = [],\n  placeholderColor,\n  borderColor\n}: { dateTime?: Array<string> } & TChartColor) {\n  let dateArray: Array<string> = ['00:00', '02:00', '04:00', '06:00'];\n  if (dateTime.length > 0) {\n    const divideNum = 7;\n    dateArray = getDateArray(dateTime, divideNum);\n  }\n\n  return {\n    color: getChartListColor(),\n    tooltip: {\n      trigger: 'item'\n    },\n    grid: {\n      top: '10px',\n      left: '0',\n      right: '20px',\n      bottom: '36px',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      data: dateArray,\n      boundaryGap: false,\n      axisLabel: {\n        color: placeholderColor\n      },\n      axisLine: {\n        lineStyle: {\n          color: borderColor,\n          width: 1\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      axisLabel: {\n        color: placeholderColor\n      },\n      splitLine: {\n        lineStyle: {\n          color: borderColor\n        }\n      }\n    },\n    legend: {\n      data: ['本月', '上月'],\n      icon: 'circle',\n      bottom: '0',\n      itemGap: 48,\n      itemHeight: 8,\n      itemWidth: 8,\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      }\n    },\n    series: [\n      {\n        name: '上月',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line',\n        smooth: true,\n        color: getChartListColor()[0],\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8\n      },\n      {\n        name: '本月',\n        data: [\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray(),\n          getRandomArray()\n        ],\n        type: 'line',\n        smooth: true,\n        showSymbol: true,\n        symbol: 'circle',\n        symbolSize: 8,\n        color: getChartListColor()[1]\n      }\n    ]\n  };\n}\n\nexport const lastYearList: Array<any> = [100, 120, 140, 160, 180, 200, 210];\n\n/**\n * 柱状图数据结构\n *\n * @export\n * @param {boolean} [isMonth=false]\n * @returns {*}\n */\nexport function get2ColBarChartDataSet({\n  isMonth = false,\n  placeholderColor,\n  borderColor\n}: { isMonth?: boolean } & TChartColor) {\n  let lastYearListCopy = lastYearList.concat([]);\n  let thisYearListCopy = lastYearList.concat([]);\n\n  if (isMonth) {\n    lastYearListCopy = lastYearListCopy.reverse();\n    thisYearListCopy = thisYearListCopy.reverse();\n  }\n\n  return {\n    color: getChartListColor(),\n    tooltip: {\n      trigger: 'item'\n    },\n    grid: {\n      top: '10px',\n      left: '0',\n      right: '0',\n      bottom: '36px',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],\n        axisTick: {\n          alignWithLabel: true\n        },\n        axisLabel: {\n          color: placeholderColor\n        },\n        axisLine: {\n          lineStyle: {\n            color: borderColor,\n            width: 1\n          }\n        }\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        axisLabel: {\n          color: placeholderColor\n        },\n        splitLine: {\n          lineStyle: {\n            color: borderColor\n          }\n        }\n      }\n    ],\n    legend: {\n      data: ['去年', '今年'],\n      bottom: '0',\n      icon: 'rect',\n      itemGap: 48,\n      itemHeight: 4,\n      itemWidth: 12,\n      textStyle: {\n        fontSize: 12,\n        color: placeholderColor\n      }\n    },\n    series: [\n      {\n        name: '去年',\n        type: 'bar',\n        barWidth: '30%',\n        data: lastYearListCopy\n      },\n      {\n        name: '今年',\n        type: 'bar',\n        barWidth: '30%',\n        data: thisYearListCopy\n      }\n    ]\n  };\n}\n","export const BASE_INFO_DATA = [\n  {\n    name: '集群名',\n    value: 'helloworld',\n    type: null\n  },\n  {\n    name: '集群ID',\n    value: 'cls - 2ntelvxw',\n    type: {\n      key: 'color',\n      value: 'blue'\n    }\n  },\n  {\n    name: '状态',\n    value: '运行中',\n    type: {\n      key: 'color',\n      value: 'green'\n    }\n  },\n  {\n    name: 'K8S版本',\n    value: '1.7.8',\n    type: null\n  },\n  {\n    name: '配置',\n    value: '6.73 核 10.30 GB',\n    type: null\n  },\n  {\n    name: '所在地域',\n    value: '广州',\n    type: null\n  },\n  {\n    name: '新增资源所属项目',\n    value: '默认项目',\n    type: null\n  },\n  {\n    name: '节点数量',\n    value: '4 个',\n    type: null\n  },\n  {\n    name: '节点网络',\n    value: 'vpc - 5frmkm1x',\n    type: {\n      key: 'color',\n      value: 'blue'\n    }\n  },\n  {\n    name: '容器网络',\n    value: '172.16.0.0 / 16',\n    type: null\n  },\n  {\n    name: '集群凭证',\n    value: '显示凭证',\n    type: {\n      key: 'color',\n      value: 'blue'\n    }\n  },\n  {\n    name: '创建/更新',\n    value: '2018-05-31 22:11:44 2018-05-31 22:11:44',\n    type: {\n      key: 'contractAnnex',\n      value: 'pdf'\n    }\n  },\n  {\n    name: '描述',\n    value: 'istio_test',\n    type: null\n  }\n];\n\nexport const TABLE_COLUMNS = [\n  {\n    width: '448',\n    ellipsis: true,\n    colKey: 'name',\n    title: '项目名称',\n    sorter: (a, b) => a.name.substr(10) - b.name.substr(10)\n  },\n  {\n    width: '448',\n    ellipsis: true,\n    colKey: 'adminName',\n    title: '管理员'\n  },\n  {\n    width: '448',\n    className: 'test',\n    ellipsis: true,\n    colKey: 'updateTime',\n    title: '创建时间',\n    sorter: (a, b) => Date.parse(a.updateTime) - Date.parse(b.updateTime)\n  },\n  {\n    align: 'left',\n    width: '200',\n    className: 'test2',\n    ellipsis: true,\n    colKey: 'op',\n    fixed: 'right',\n    title: '操作'\n  }\n];\n","<template>\n  <div class=\"detail-deploy\">\n    <t-row :gutter=\"16\">\n      <t-col\n        :lg=\"6\"\n        :xs=\"12\"\n      >\n        <t-card title=\"部署趋势\">\n          <div class=\"deploy-panel-left\">\n            <div\n              id=\"monitorContainer\"\n              style=\"width: 100%; height: 265px\"\n            ></div>\n          </div>\n        </t-card>\n      </t-col>\n      <t-col\n        :lg=\"6\"\n        :xs=\"12\"\n      >\n        <t-card title=\"告警情况\">\n          <template #option>\n            <t-radio-group\n              default-value=\"dateVal\"\n              @change=\"onAlertChange\"\n            >\n              <t-radio-button value=\"dateVal\">本周</t-radio-button>\n              <t-radio-button value=\"monthVal\">本月</t-radio-button>\n            </t-radio-group>\n          </template>\n          <div\n            id=\"dataContainer\"\n            style=\"width: 100%; height: 265px\"\n          ></div>\n        </t-card>\n      </t-col>\n    </t-row>\n\n    <!-- 项目列表 -->\n    <t-card\n      title=\"项目列表\"\n      class=\"container-base-margin-top\"\n    >\n      <t-table\n        :columns=\"columns\"\n        :data=\"data\"\n        :pagination=\"pagination\"\n        :hover=\"true\"\n        row-key=\"index\"\n        @sort-change=\"sortChange\"\n        @change=\"rehandleChange\"\n      >\n        <template #adminName=\"{ row }\">\n          <span>\n            {{ row.adminName }}\n            <t-tag\n              v-if=\"row.adminPhone\"\n              size=\"small\"\n            >\n              {{ row.adminPhone }}\n            </t-tag>\n          </span>\n        </template>\n        <template #op=\"slotProps\">\n          <a\n            :class=\"prefix + '-link'\"\n            @click=\"listClick()\"\n          >\n            管理\n          </a>\n          <a\n            :class=\"prefix + '-link'\"\n            @click=\"deleteClickOp(slotProps)\"\n          >\n            删除\n          </a>\n        </template>\n        <template #op-column>\n          <t-icon name=\"descending-order\" />\n        </template>\n      </t-table>\n    </t-card>\n\n    <t-dialog\n      v-model:visible=\"visible\"\n      header=\"基本信息\"\n      @confirm=\"onConfirm\"\n    >\n      <template #body>\n        <div class=\"dialog-info-block\">\n          <div class=\"dialog-info-block\">\n            <div\n              v-for=\"(item, index) in BASE_INFO_DATA\"\n              :key=\"index\"\n              class=\"info-item\"\n            >\n              <h1>{{ item.name }}</h1>\n              <span\n                :class=\"{\n                  ['green']: item.type && item.type.value === 'green',\n                  ['blue']: item.type && item.type.value === 'blue'\n                }\"\n              >\n                {{ item.value }}\n              </span>\n            </div>\n          </div>\n        </div>\n      </template>\n    </t-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nexport default {\n  name: 'DetailDeploy'\n};\n</script>\n\n<script setup lang=\"ts\">\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  LegendComponent\n} from 'echarts/components';\nimport { BarChart, LineChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { useSettingStore } from '@/store';\n\nimport { getSmoothLineDataSet, get2ColBarChartDataSet } from './index';\nimport { BASE_INFO_DATA, TABLE_COLUMNS as columns } from './constants';\nimport { changeChartsTheme } from '@/utils/color';\n\nimport { prefix } from '@/config/global';\nimport { ResDataType } from '@/interface';\nimport request from '@/utils/request';\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  LegendComponent,\n  BarChart,\n  LineChart,\n  CanvasRenderer\n]);\n\nconst store = useSettingStore();\n\nconst chartColors = computed(() => store.chartColors);\nconst data = ref([]);\nconst pagination = ref({\n  defaultPageSize: 10,\n  total: 100,\n  defaultCurrent: 1\n});\n\nconst fetchData = async () => {\n  try {\n    const res: ResDataType = await request.get('/api/get-project-list');\n    if (res.code === 0) {\n      const { list = [] } = res.data;\n      data.value = list;\n      pagination.value = {\n        ...pagination.value,\n        total: list.length\n      };\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\nconst visible = ref(false);\n\n// monitorChart logic\nlet monitorContainer: HTMLElement;\nlet monitorChart: echarts.ECharts;\nonMounted(() => {\n  monitorContainer = document.getElementById('monitorContainer');\n  monitorChart = echarts.init(monitorContainer);\n  monitorChart.setOption(getSmoothLineDataSet({ ...chartColors.value }));\n  setInterval(() => {\n    monitorChart.setOption(getSmoothLineDataSet({ ...chartColors.value }));\n  }, 3000);\n});\n\n// dataChart logic\nlet dataContainer: HTMLElement;\nlet dataChart: echarts.ECharts;\nonMounted(() => {\n  dataContainer = document.getElementById('dataContainer');\n  dataChart = echarts.init(dataContainer);\n  dataChart.setOption(get2ColBarChartDataSet({ ...chartColors.value }));\n});\n\nconst intervalTimer = null;\n\n/// / chartSize update\nconst updateContainer = () => {\n  monitorChart.resize({\n    width: monitorContainer.clientWidth,\n    height: monitorContainer.clientHeight\n  });\n  dataChart.resize({\n    width: dataContainer.clientWidth,\n    height: dataContainer.clientHeight\n  });\n};\n\nonUnmounted(() => {\n  window.removeEventListener('resize', updateContainer);\n  clearInterval(intervalTimer);\n});\n\nconst onAlertChange = () => {\n  dataChart.setOption(get2ColBarChartDataSet({ ...chartColors.value }));\n};\n\nonMounted(() => {\n  fetchData();\n  window.addEventListener('resize', updateContainer, false);\n});\n\nwatch(\n  () => store.brandTheme,\n  () => {\n    changeChartsTheme([monitorChart, dataChart]);\n  }\n);\n\nconst sortChange = val => {\n  console.log(val);\n};\nconst rehandleChange = (changeParams, triggerAndData) => {\n  console.log('统一Change', changeParams, triggerAndData);\n};\nconst listClick = () => {\n  visible.value = true;\n};\nconst onConfirm = () => {\n  visible.value = false;\n};\nconst deleteClickOp = e => {\n  data.value.splice(e.rowIndex, 1);\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import url('../base/index.less');\n.detail-deploy {\n  :deep(.t-card) {\n    padding: 8px;\n  }\n  :deep(.t-card__title) {\n    font-size: 20px;\n    font-weight: 500;\n  }\n}\n</style>\n"],"names":["getSmoothLineDataSet","dateTime","placeholderColor","borderColor","dateArray","length","getDateArray","color","getChartListColor","tooltip","trigger","grid","top","left","right","bottom","containLabel","xAxis","type","data","boundaryGap","axisLabel","axisLine","lineStyle","width","yAxis","splitLine","legend","icon","itemGap","itemHeight","itemWidth","textStyle","fontSize","series","name","getRandomArray","smooth","showSymbol","symbol","symbolSize","lastYearList","get2ColBarChartDataSet","isMonth","lastYearListCopy","concat","thisYearListCopy","reverse","axisTick","alignWithLabel","barWidth","BASE_INFO_DATA","value","key","TABLE_COLUMNS","ellipsis","colKey","title","sorter","a","b","substr","className","Date","parse","updateTime","align","fixed","use","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","LegendComponent","BarChart","LineChart","CanvasRenderer","store","useSettingStore","chartColors","computed","ref","pagination","defaultPageSize","total","defaultCurrent","fetchData","__async","this","res","request","get","code","list","__spreadProps","__spreadValues","e","visible","monitorContainer","monitorChart","dataContainer","dataChart","onMounted","document","getElementById","echarts.init","setOption","setInterval","updateContainer","resize","clientWidth","height","clientHeight","onUnmounted","window","removeEventListener","clearInterval","onAlertChange","addEventListener","watch","brandTheme","changeChartsTheme","sortChange","val","rehandleChange","changeParams","triggerAndData","onConfirm","splice","rowIndex"],"mappings":"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"}