{"version":3,"file":"index-99a24685.js","sources":["../../../src/pages/demo/webworker/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div>the recommend using way of worker</div>\n    <div>计算结果：{{ showPageRef }}</div>\n  </div>\n</template>\n<script setup>\n//Recommend to read\n//https://blog.csdn.net/damo_qian/article/details/112757281\n\n/*推荐worker使用方式*/\n// 方式，函数直接转换\nconst workerCode = () => {\n  onmessage = e => {\n    console.time('加载时间');\n    console.log('接收到主线程的信息' + e.data);\n    //处理复杂的js逻辑\n    let countNum = 0;\n    for (let i = 0; i < e.data; i++) {\n      countNum = i + countNum;\n    }\n    //处理完毕返回主线程\n    console.log('子线程数据处理完毕返回主线程');\n    console.timeEnd('加载时间');\n    postMessage(countNum);\n  };\n};\n\n//change func to url for worker using\nconst changeFuncToUrl = func => {\n  const workBlob = new Blob([`(${func.toString()})()`]); // 把函数转成一个自执行函数\n  const url = URL.createObjectURL(workBlob);\n  return new Worker(url);\n};\n\n//主线程逻辑\nconst worker = changeFuncToUrl(workerCode);\nworker.postMessage(30000000);\nlet showPageRef = ref(null);\nworker.onmessage = e => {\n  console.log(`主进程收到了子进程发出的信息：${e.data}`);\n  showPageRef.value = e.data;\n  //停止线程（注:用完后一定要停止）\n  worker.terminate();\n};\n</script>\n"],"names":["worker","func","workBlob","Blob","toString","url","URL","createObjectURL","Worker","changeFuncToUrl","onmessage","e","countNum","i","data","postMessage","showPageRef","ref","value","terminate"],"mappings":"mMAYA,MAwBAA,EAPA,CAAAC,IACA,MAAAC,EAAA,IAAAC,KAAA,CAAA,IAAAF,EAAAG,kBACAC,EAAAC,IAAAC,gBAAAL,GACA,OAAA,IAAAM,OAAAH,IAIAI,CAxBA,KACAC,UAAAC,IAIA,IAAAC,EAAA,EACA,IAAA,IAAAC,EAAA,EAAAA,EAAAF,EAAAG,KAAAD,IACAD,EAAAC,EAAAD,EAKAG,YAAAH,MAaAZ,EAAAe,YAAA,KACA,IAAAC,EAAAC,EAAA,aACAjB,EAAAU,UAAAC,IAEAK,EAAAE,MAAAP,EAAAG,KAEAd,EAAAmB"}