{"version":3,"file":"index-cf7ca57d.js","sources":["../../../src/config/global.ts","../../../src/utils/request/cancel.ts","../../../src/utils/request/axios.ts","../../../src/utils/request/util.ts","../../../src/utils/request/handle-error.ts","../../../src/utils/request/index.ts"],"sourcesContent":["export const prefix = 'tdesign-starter';\nexport const TOKEN_NAME = 'tdesign-starter';\n\n// Tdesign全局特性配置\n// 可以在此处定义更多自定义配置，具体可配置内容参看 API 文档 https://tdesign.tencent.com/vue-next/config\nexport const globalConfigZh = {\n  calendar: {},\n  table: {},\n  pagination: {}\n};\nexport const globalConfigEn = {\n  calendar: {},\n  table: {},\n  pagination: {}\n};\n","import type { AxiosRequestConfig, Canceler } from 'axios';\nimport axios from 'axios';\nimport isFunction from 'lodash-es/isFunction';\n\n// 存储请求与取消令牌的键值对列表\nlet pendingMap = new Map<string, Canceler>();\n\nexport const getPendingUrl = (config: AxiosRequestConfig) =>\n  [config.method, config.url].join('&');\n\nexport class AxiosCanceler {\n  // 添加请求到列表\n  addPending(config: AxiosRequestConfig) {\n    this.removePending(config);\n    const url = getPendingUrl(config);\n    config.cancelToken =\n      config.cancelToken ||\n      new axios.CancelToken(cancel => {\n        if (!pendingMap.has(url)) {\n          // 如果当前没有相同请求就添加\n          pendingMap.set(url, cancel);\n        }\n      });\n  }\n\n  // 清空所有请求\n  removeAllPending() {\n    pendingMap.forEach(cancel => {\n      if (cancel && isFunction(cancel)) cancel();\n    });\n    pendingMap.clear();\n  }\n\n  // 移除某个请求\n  removePending(config: AxiosRequestConfig) {\n    const url = getPendingUrl(config);\n\n    if (pendingMap.has(url)) {\n      // If there is a current request identifier in pending,\n      // the current request needs to be cancelled and removed\n      const cancel = pendingMap.get(url);\n      if (cancel) cancel(url);\n      pendingMap.delete(url);\n    }\n  }\n\n  reset() {\n    pendingMap = new Map<string, Canceler>();\n  }\n}\n","import axios, {\n  AxiosRequestConfig,\n  AxiosInstance,\n  AxiosResponse,\n  AxiosError\n} from 'axios';\nimport { stringify } from 'qs';\nimport isFunction from 'lodash-es/isFunction';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport { CreateAxiosOptions } from './transform';\nimport { AxiosCanceler } from './cancel';\nimport {\n  AxiosRequestConfigRetry,\n  RequestOptions,\n  Result\n} from '../../../types/axios';\n// Axios模块\nexport class VAxios {\n  // axios句柄\n  private instance: AxiosInstance;\n\n  // axios选项\n  private readonly options: CreateAxiosOptions;\n\n  constructor(options: CreateAxiosOptions) {\n    this.options = options;\n    this.instance = axios.create(options);\n    this.setupInterceptors();\n  }\n\n  // 创建axios句柄\n  private createAxios(config: CreateAxiosOptions): void {\n    this.instance = axios.create(config);\n  }\n\n  // 获取数据处理\n  private getTransform() {\n    const { transform } = this.options;\n    return transform;\n  }\n\n  // 获取句柄\n  getAxios(): AxiosInstance {\n    return this.instance;\n  }\n\n  // 配置 axios\n  configAxios(config: CreateAxiosOptions) {\n    if (!this.instance) {\n      return;\n    }\n    this.createAxios(config);\n  }\n\n  // 设置通用头信息\n  setHeader(headers: Record<string, string>): void {\n    if (!this.instance) {\n      return;\n    }\n    Object.assign(this.instance.defaults.headers, headers);\n  }\n\n  // 设置拦截器\n  private setupInterceptors() {\n    const transform = this.getTransform();\n    if (!transform) {\n      return;\n    }\n    const {\n      requestInterceptors,\n      requestInterceptorsCatch,\n      responseInterceptors,\n      responseInterceptorsCatch\n    } = transform;\n    const axiosCanceler = new AxiosCanceler();\n\n    // 请求配置处理\n    this.instance.interceptors.request.use((config: AxiosRequestConfig) => {\n      const {\n        headers: { ignoreRepeatRequest }\n      } = config;\n      const ignoreRepeat =\n        ignoreRepeatRequest ?? this.options.requestOptions?.ignoreRepeatRequest;\n      if (!ignoreRepeat) axiosCanceler.addPending(config);\n\n      if (requestInterceptors && isFunction(requestInterceptors)) {\n        config = requestInterceptors(config, this.options);\n      }\n      return config;\n    }, undefined);\n\n    // 请求错误处理\n    if (requestInterceptorsCatch && isFunction(requestInterceptorsCatch)) {\n      this.instance.interceptors.request.use(\n        undefined,\n        requestInterceptorsCatch\n      );\n    }\n\n    // 响应结果处理\n    this.instance.interceptors.response.use((res: AxiosResponse) => {\n      if (res) axiosCanceler.removePending(res.config);\n      if (responseInterceptors && isFunction(responseInterceptors)) {\n        res = responseInterceptors(res);\n      }\n      return res;\n    }, undefined);\n\n    // 响应错误处理\n    if (responseInterceptorsCatch && isFunction(responseInterceptorsCatch)) {\n      this.instance.interceptors.response.use(\n        undefined,\n        responseInterceptorsCatch\n      );\n    }\n  }\n\n  // 支持Form Data\n  supportFormData(config: AxiosRequestConfig) {\n    const headers = config.headers || this.options.headers;\n    const contentType = headers?.['Content-Type'] || headers?.['content-type'];\n\n    if (\n      contentType !== 'application/x-www-form-urlencoded;charset=UTF-8' ||\n      !Reflect.has(config, 'data') ||\n      config.method?.toUpperCase() === 'GET'\n    ) {\n      return config;\n    }\n\n    return {\n      ...config,\n      data: stringify(config.data, { arrayFormat: 'brackets' })\n    };\n  }\n\n  get<T = any>(\n    config: AxiosRequestConfig,\n    options?: RequestOptions\n  ): Promise<T> {\n    return this.request({ ...config, method: 'GET' }, options);\n  }\n\n  post<T = any>(\n    config: AxiosRequestConfig,\n    options?: RequestOptions\n  ): Promise<T> {\n    return this.request({ ...config, method: 'POST' }, options);\n  }\n\n  put<T = any>(\n    config: AxiosRequestConfig,\n    options?: RequestOptions\n  ): Promise<T> {\n    return this.request({ ...config, method: 'PUT' }, options);\n  }\n\n  delete<T = any>(\n    config: AxiosRequestConfig,\n    options?: RequestOptions\n  ): Promise<T> {\n    return this.request({ ...config, method: 'DELETE' }, options);\n  }\n\n  patch<T = any>(\n    config: AxiosRequestConfig,\n    options?: RequestOptions\n  ): Promise<T> {\n    return this.request({ ...config, method: 'PATCH' }, options);\n  }\n\n  // 请求\n  async request<T = any>(\n    config: AxiosRequestConfigRetry,\n    options?: RequestOptions\n  ): Promise<T> {\n    let conf: CreateAxiosOptions = cloneDeep(config);\n    const transform = this.getTransform();\n\n    const { requestOptions } = this.options;\n\n    const opt: RequestOptions = { ...requestOptions, ...options };\n\n    const { beforeRequestHook, requestCatchHook, transformRequestHook } =\n      transform || {};\n    if (beforeRequestHook && isFunction(beforeRequestHook)) {\n      conf = beforeRequestHook(conf, opt);\n    }\n    conf.requestOptions = opt;\n\n    conf = this.supportFormData(conf);\n\n    return new Promise((resolve, reject) => {\n      this.instance\n        .request<any, AxiosResponse<Result>>(!config.retryCount ? conf : config)\n        .then((res: AxiosResponse<Result>) => {\n          if (transformRequestHook && isFunction(transformRequestHook)) {\n            try {\n              const ret = transformRequestHook(res, opt);\n              resolve(ret);\n            } catch (err) {\n              reject(err || new Error('请求错误!'));\n            }\n            return;\n          }\n          resolve(res as unknown as Promise<T>);\n        })\n        .catch((e: Error | AxiosError) => {\n          if (requestCatchHook && isFunction(requestCatchHook)) {\n            reject(requestCatchHook(e, opt));\n            return;\n          }\n\n          if (axios.isAxiosError(e)) {\n            // 在这里重写Axios的错误信息\n          }\n\n          reject(e);\n        });\n    });\n  }\n}\n","import isString from 'lodash-es/isString';\nimport isObject from 'lodash-es/isObject';\nimport { Recordable } from 'vite-plugin-mock';\n\nconst DATE_TIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\nexport function joinTimestamp<T extends boolean>(\n  join: boolean,\n  restful: T\n): T extends true ? string : object;\n\nexport function joinTimestamp(join: boolean, restful = false): string | object {\n  if (!join) {\n    return restful ? '' : {};\n  }\n  const now = new Date().getTime();\n  if (restful) {\n    return `?_t=${now}`;\n  }\n  return { _t: now };\n}\n\n// 格式化提交参数时间\nexport function formatRequestDate(params: Recordable) {\n  if (Object.prototype.toString.call(params) !== '[object Object]') {\n    return;\n  }\n\n  for (const key in params) {\n    // eslint-disable-next-line no-underscore-dangle\n    if (params[key] && params[key]._isAMomentObject) {\n      params[key] = params[key].format(DATE_TIME_FORMAT);\n    }\n    if (isString(key)) {\n      const value = params[key];\n      if (value) {\n        try {\n          params[key] = isString(value) ? value.trim() : value;\n        } catch (error: any) {\n          throw new Error(error);\n        }\n      }\n    }\n    if (isObject(params[key])) {\n      formatRequestDate(params[key]);\n    }\n  }\n}\n\n// 将对象转为Url参数\nexport function setObjToUrlParams(baseUrl: string, obj: object): string {\n  let parameters = '';\n  for (const key in obj) {\n    parameters += `${key}=${encodeURIComponent(obj[key])}&`;\n  }\n  parameters = parameters.replace(/&$/, '');\n  return /\\?$/.test(baseUrl)\n    ? baseUrl + parameters\n    : baseUrl.replace(/\\/?$/, '?') + parameters;\n}\n","import axios, { AxiosError } from 'axios';\nimport { MessagePlugin } from 'tdesign-vue-next';\n\nexport const ERROR_MESSAGES = {\n  400: '错误请求!',\n  401: '登录失效，请尝试重新登录!',\n  403: '暂无该操作权限',\n  404: '资源不存在',\n  500: '服务异常',\n  NetworkError: '网络异常，请检查您的网络连接是否正常!',\n  TimeoutError: '请求超时，请刷新页面重试!',\n  CancelToken: '请求已取消'\n};\n\nexport enum ErrorStatus {\n  NetworkError = 'NetworkError',\n  TimeoutError = 'TimeoutError',\n  CancelToken = 'CancelToken'\n}\n\nexport function handleError(error: AxiosError) {\n  let errorStatus: string | number;\n\n  const { response, message, code, config } = error || {};\n  if (code === 'ECONNABORTED' && message.indexOf('timeout') !== -1) {\n    error.message = ERROR_MESSAGES.TimeoutError;\n    errorStatus = ErrorStatus.TimeoutError;\n  }\n\n  if (message === 'Network Error') {\n    error.message = ERROR_MESSAGES.NetworkError;\n    errorStatus = ErrorStatus.NetworkError;\n  }\n\n  if (ERROR_MESSAGES[response?.status]) {\n    error.message = ERROR_MESSAGES[response?.status];\n    errorStatus = response?.status;\n  }\n\n  if (axios.isCancel(error)) {\n    error.message = ERROR_MESSAGES.CancelToken;\n    errorStatus = ErrorStatus.CancelToken;\n  }\n\n  if (config?.requestOptions?.showErrorMessage) {\n    MessagePlugin.closeAll();\n    MessagePlugin.error(`接口异常：${errorStatus} - ${error.message}`);\n  }\n\n  return error;\n}\n","// axios配置  可自行根据项目进行更改，只需更改该文件即可，其他文件可以不动\nimport isString from 'lodash-es/isString';\nimport merge from 'lodash-es/merge';\nimport type { AxiosTransform, CreateAxiosOptions } from './transform';\nimport { VAxios } from './axios';\nimport { joinTimestamp, formatRequestDate, setObjToUrlParams } from './util';\nimport { TOKEN_NAME } from '@/config/global';\nimport { handleError } from './handle-error';\n\n// 数据处理，方便区分多种处理方式\nconst transform: AxiosTransform = {\n  // 处理请求数据。如果数据不是预期格式，可直接抛出错误\n  transformRequestHook: (res, options) => {\n    const { isTransformResponse, isReturnNativeResponse } = options;\n\n    // 如果204无内容直接返回\n    const method = res.config.method?.toLowerCase();\n    if (res.status === 204 || method === 'put' || method === 'patch') {\n      return res;\n    }\n\n    // 是否返回原生响应头 比如：需要获取响应头时使用该属性\n    if (isReturnNativeResponse) {\n      return res;\n    }\n    // 不进行任何处理，直接返回\n    // 用于页面代码可能需要直接获取code，data，message这些信息时开启\n    if (!isTransformResponse) {\n      return res.data;\n    }\n\n    // 错误的时候返回\n    const { data } = res;\n    if (!data) {\n      throw new Error('请求接口错误');\n    }\n\n    //  这里 code为 后台统一的字段，需要在 types.ts内修改为项目自己的接口返回格式\n    const { code, msg } = data;\n\n    // 这里逻辑可以根据项目进行修改\n    const hasSuccess = data && code === 0;\n    if (hasSuccess) {\n      return data.data;\n    }\n\n    throw new Error(`请求接口错误, 错误码: ${code}, 错误信息: ${msg}`);\n  },\n\n  // 请求前处理配置\n  beforeRequestHook: (config, options) => {\n    const {\n      apiUrl,\n      isJoinPrefix,\n      urlPrefix,\n      joinParamsToUrl,\n      formatDate,\n      joinTime = true\n    } = options;\n\n    // 添加接口前缀\n    if (isJoinPrefix && urlPrefix && isString(urlPrefix)) {\n      config.url = `${urlPrefix}${config.url}`;\n    }\n\n    // 将baseUrl拼接\n    if (apiUrl && isString(apiUrl)) {\n      config.url = `${apiUrl}${config.url}`;\n    }\n    const params = config.params || {};\n    const data = config.data || false;\n\n    if (formatDate && data && !isString(data)) {\n      formatRequestDate(data);\n    }\n    if (config.method?.toUpperCase() === 'GET') {\n      if (!isString(params)) {\n        // 给 get 请求加上时间戳参数，避免从缓存中拿数据。\n        config.params = Object.assign(\n          params || {},\n          joinTimestamp(joinTime, false)\n        );\n      } else {\n        // 兼容restful风格\n        config.url = `${config.url + params}${joinTimestamp(joinTime, true)}`;\n        config.params = undefined;\n      }\n    } else if (!isString(params)) {\n      if (formatDate) {\n        formatRequestDate(params);\n      }\n      if (\n        Reflect.has(config, 'data') &&\n        config.data &&\n        (Object.keys(config.data).length > 0 || data instanceof FormData)\n      ) {\n        config.data = data;\n        config.params = params;\n      } else {\n        // 非GET请求如果没有提供data，则将params视为data\n        config.data = params;\n        config.params = undefined;\n      }\n      if (joinParamsToUrl) {\n        config.url = setObjToUrlParams(config.url as string, {\n          ...config.params,\n          ...config.data\n        });\n      }\n    } else {\n      // 兼容restful风格\n      config.url += params;\n      config.params = undefined;\n    }\n    return config;\n  },\n\n  // 请求拦截器处理\n  requestInterceptors: (config, options) => {\n    // 请求之前处理config\n    const token = localStorage.getItem(TOKEN_NAME);\n    if (token && (config as Recordable)?.requestOptions?.withToken !== false) {\n      // jwt token\n      (config as Recordable).headers.Authorization =\n        options.authenticationScheme\n          ? `${options.authenticationScheme} ${token}`\n          : token;\n    }\n    return config;\n  },\n\n  // 响应拦截器处理\n  responseInterceptors: res => {\n    return res;\n  },\n\n  // 响应错误处理\n  responseInterceptorsCatch: (error: any) => {\n    const { config } = error;\n    handleError(error);\n    if (!config || !config.requestOptions.retry) {\n      return Promise.reject(error);\n    }\n\n    config.retryCount = config.retryCount || 0;\n\n    if (config.retryCount >= config.requestOptions.retry.count) {\n      return Promise.reject(error);\n    }\n\n    config.retryCount += 1;\n\n    const backoff = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(config);\n      }, config.requestOptions.retry.delay || 1);\n    });\n\n    return backoff.then(config => request.request(config));\n  }\n};\n\nfunction createAxios(opt?: Partial<CreateAxiosOptions>) {\n  return new VAxios(\n    merge(\n      <CreateAxiosOptions>{\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#authentication_schemes\n        // 例如: authenticationScheme: 'Bearer'\n        authenticationScheme: '',\n        // 超时\n        timeout: 10 * 1000,\n        // 携带Cookie\n        withCredentials: true,\n        // 头信息\n        headers: { 'Content-Type': 'application/json;charset=UTF-8' },\n        // 数据处理方式\n        transform,\n        // 配置项，下面的选项都可以在独立的接口请求中覆盖\n        requestOptions: {\n          // 接口地址\n          // 是否自动添加接口前缀\n          isJoinPrefix: true,\n          // 接口前缀\n          // 例如: https://www.baidu.com/api\n          // urlPrefix: '/api'\n          // 是否返回原生响应头 比如：需要获取响应头时使用该属性\n          isReturnNativeResponse: false,\n          // 需要对返回数据进行处理\n          isTransformResponse: true,\n          // post请求的时候添加参数到url\n          joinParamsToUrl: false,\n          // 格式化提交参数时间\n          formatDate: true,\n          // 是否加入时间戳\n          joinTime: true,\n          // 忽略重复请求\n          ignoreRepeatRequest: true,\n          // 是否携带token\n          withToken: true,\n          // 重试\n          retry: {\n            count: 3,\n            delay: 1000\n          },\n          // 显示错误信息\n          showErrorMessage: true\n        }\n      },\n      opt || {}\n    )\n  );\n}\n\nconst request = createAxios();\nexport default request;\n"],"names":["prefix","TOKEN_NAME","globalConfigZh","calendar","table","pagination","globalConfigEn","pendingMap","Map","getPendingUrl","config","method","url","join","AxiosCanceler","[object Object]","this","removePending","cancelToken","axios","CancelToken","cancel","has","set","forEach","isFunction","clear","get","delete","VAxios","options","__publicField","instance","create","setupInterceptors","transform","createAxios","headers","Object","assign","defaults","getTransform","requestInterceptors","requestInterceptorsCatch","responseInterceptors","responseInterceptorsCatch","axiosCanceler","interceptors","request","use","ignoreRepeatRequest","_a","requestOptions","addPending","response","res","Reflect","toUpperCase","__spreadProps","data","stringify","arrayFormat","__spreadValues","conf","cloneDeep","opt","beforeRequestHook","requestCatchHook","transformRequestHook","supportFormData","Promise","resolve","reject","retryCount","then","ret","err","Error","catch","e","isAxiosError","joinTimestamp","restful","now","Date","getTime","_t","formatRequestDate","params","prototype","toString","call","key","_isAMomentObject","format","isString","value","trim","error","isObject","ERROR_MESSAGES","400","401","403","404","500","NetworkError","TimeoutError","merge","authenticationScheme","timeout","withCredentials","Content-Type","isTransformResponse","isReturnNativeResponse","toLowerCase","status","code","msg","apiUrl","isJoinPrefix","urlPrefix","joinParamsToUrl","formatDate","joinTime","keys","length","FormData","baseUrl","obj","parameters","encodeURIComponent","replace","test","setObjToUrlParams","token","localStorage","getItem","withToken","Authorization","errorStatus","message","indexOf","isCancel","showErrorMessage","MessagePlugin","closeAll","handleError","retry","count","setTimeout","delay"],"mappings":"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"}