{"version":3,"file":"index-44ea8a27.js","sources":["../../../src/assets/images/material1.png","../../../src/assets/images/material2.png","../../../src/hooks/use-counter.ts","../../../src/pages/login/components/login.vue","../../../src/pages/login/components/register.vue","../../../src/pages/login/index.vue"],"sourcesContent":["export default \"__VITE_ASSET__dc359613__\"","export default \"__VITE_ASSET__142c8511__\"","import { Ref } from 'vue';\n\n/**\n * counter utils\n * @param duration\n * @returns\n */\nexport const useCounter = (duration = 60): [Ref<number>, () => void] => {\n  let intervalTimer: NodeJS.Timeout;\n  onUnmounted(() => {\n    clearInterval(intervalTimer);\n  });\n  const countDown = ref(0);\n\n  return [\n    countDown,\n    () => {\n      countDown.value = duration;\n      intervalTimer = setInterval(() => {\n        if (countDown.value > 0) {\n          countDown.value -= 1;\n        } else {\n          clearInterval(intervalTimer);\n          countDown.value = 0;\n        }\n      }, 1000);\n    }\n  ];\n};\n","<template>\n  <t-form\n    ref=\"form\"\n    :class=\"['item-container', `login-${type}`]\"\n    :data=\"formData\"\n    :rules=\"FORM_RULES\"\n    label-width=\"0\"\n    @submit=\"onSubmit\"\n  >\n    <template v-if=\"type == 'password'\">\n      <t-form-item name=\"account\">\n        <t-input\n          v-model=\"formData.account\"\n          size=\"large\"\n          placeholder=\"请输入账号：admin\"\n        >\n          <template #prefix-icon>\n            <t-icon name=\"user\" />\n          </template>\n        </t-input>\n      </t-form-item>\n\n      <t-form-item name=\"password\">\n        <t-input\n          v-model=\"formData.password\"\n          size=\"large\"\n          :type=\"showPsw ? 'text' : 'password'\"\n          clearable\n          placeholder=\"请输入登录密码：admin\"\n        >\n          <template #prefix-icon>\n            <t-icon name=\"lock-on\" />\n          </template>\n          <template #suffix-icon>\n            <t-icon\n              :name=\"showPsw ? 'browse' : 'browse-off'\"\n              @click=\"showPsw = !showPsw\"\n            />\n          </template>\n        </t-input>\n      </t-form-item>\n\n      <div class=\"check-container remember-pwd\">\n        <t-checkbox>记住账号</t-checkbox>\n        <span class=\"tip\">忘记账号？</span>\n      </div>\n    </template>\n\n    <!-- 扫码登录 -->\n    <template v-else-if=\"type == 'qrcode'\">\n      <div class=\"tip-container\">\n        <span class=\"tip\">请使用微信扫一扫登录</span>\n        <span class=\"refresh\">\n          刷新\n          <t-icon name=\"refresh\" />\n        </span>\n      </div>\n      <qrcode-vue\n        value=\"\"\n        :size=\"192\"\n        level=\"H\"\n      />\n    </template>\n\n    <!-- 手机号登录 -->\n    <template v-else>\n      <t-form-item\n        class=\"verification-code\"\n        name=\"verifyCode\"\n      >\n        <t-input\n          v-model=\"formData.verifyCode\"\n          size=\"large\"\n          placeholder=\"请输入验证码\"\n        />\n        <t-button\n          variant=\"outline\"\n          :disabled=\"countDown > 0\"\n          @click=\"handleCounter\"\n        >\n          {{ countDown == 0 ? '发送验证码' : `${countDown}秒后可重发` }}\n        </t-button>\n      </t-form-item>\n    </template>\n\n    <t-form-item\n      v-if=\"type !== 'qrcode'\"\n      class=\"btn-container\"\n    >\n      <t-button\n        block\n        size=\"large\"\n        type=\"submit\"\n      >\n        登录\n      </t-button>\n    </t-form-item>\n\n    <div class=\"switch-container\">\n      <span\n        v-if=\"type !== 'password'\"\n        class=\"tip\"\n        @click=\"switchType('password')\"\n      >\n        使用账号密码登录\n      </span>\n      <span\n        v-if=\"type !== 'qrcode'\"\n        class=\"tip\"\n        @click=\"switchType('qrcode')\"\n      >\n        使用微信扫码登录\n      </span>\n      <span\n        v-if=\"type !== 'phone'\"\n        class=\"tip\"\n        @click=\"switchType('phone')\"\n      >\n        使用手机号登录\n      </span>\n    </div>\n  </t-form>\n</template>\n\n<script setup lang=\"ts\">\nimport { useRouter } from 'vue-router';\nimport QrcodeVue from 'qrcode.vue';\nimport { MessagePlugin } from 'tdesign-vue-next';\nimport { useCounter } from '@/hooks/use-counter';\nimport { useUserStore } from '@/store';\n\nconst userStore = useUserStore();\n\nconst INITIAL_DATA = {\n  phone: '',\n  account: 'admin',\n  password: 'admin',\n  verifyCode: '',\n  checked: false\n};\n\nconst FORM_RULES = {\n  phone: [{ required: true, message: '手机号必填', type: 'error' }],\n  account: [{ required: true, message: '账号必填', type: 'error' }],\n  password: [{ required: true, message: '密码必填', type: 'error' }],\n  verifyCode: [{ required: true, message: '验证码必填', type: 'error' }]\n};\n\nconst type = ref('password');\n\nconst formData = ref({ ...INITIAL_DATA });\nconst showPsw = ref(false);\n\nconst [countDown, handleCounter] = useCounter();\n\nconst switchType = (val: string) => {\n  type.value = val;\n};\n\nconst router = useRouter();\n\nconst onSubmit = async ({ validateResult }) => {\n  if (validateResult === true) {\n    try {\n      await userStore.login(formData.value);\n\n      MessagePlugin.success('登录成功');\n      router.push({\n        path: '/dashboard/base'\n      });\n    } catch (e) {\n      console.log(e);\n      MessagePlugin.error(e.message);\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import url('../index.less');\n</style>\n","<template>\n  <t-form\n    ref=\"form\"\n    :class=\"['item-container', `register-${type}`]\"\n    :data=\"formData\"\n    :rules=\"FORM_RULES\"\n    label-width=\"0\"\n    @submit=\"onSubmit\"\n  >\n    <template v-if=\"type == 'phone'\">\n      <t-form-item name=\"phone\">\n        <t-input\n          v-model=\"formData.phone\"\n          :maxlength=\"11\"\n          size=\"large\"\n          placeholder=\"请输入您的手机号\"\n        >\n          <template #prefix-icon>\n            <t-icon name=\"user\" />\n          </template>\n        </t-input>\n      </t-form-item>\n    </template>\n\n    <template v-if=\"type == 'email'\">\n      <t-form-item name=\"email\">\n        <t-input\n          v-model=\"formData.email\"\n          type=\"text\"\n          size=\"large\"\n          placeholder=\"请输入您的邮箱\"\n        >\n          <template #prefix-icon>\n            <t-icon name=\"mail\" />\n          </template>\n        </t-input>\n      </t-form-item>\n    </template>\n\n    <t-form-item name=\"password\">\n      <t-input\n        v-model=\"formData.password\"\n        size=\"large\"\n        :type=\"showPsw ? 'text' : 'password'\"\n        clearable\n        placeholder=\"请输入登录密码\"\n      >\n        <template #prefix-icon>\n          <t-icon name=\"lock-on\" />\n        </template>\n        <template #suffix-icon>\n          <t-icon\n            :name=\"showPsw ? 'browse' : 'browse-off'\"\n            @click=\"showPsw = !showPsw\"\n          />\n        </template>\n      </t-input>\n    </t-form-item>\n\n    <template v-if=\"type == 'phone'\">\n      <t-form-item\n        class=\"verification-code\"\n        name=\"verifyCode\"\n      >\n        <t-input\n          v-model=\"formData.verifyCode\"\n          size=\"large\"\n          placeholder=\"请输入验证码\"\n        />\n        <t-button\n          variant=\"outline\"\n          :disabled=\"countDown > 0\"\n          @click=\"handleCounter\"\n        >\n          {{ countDown == 0 ? '发送验证码' : `${countDown}秒后可重发` }}\n        </t-button>\n      </t-form-item>\n    </template>\n\n    <t-form-item\n      class=\"check-container\"\n      name=\"checked\"\n    >\n      <t-checkbox v-model=\"formData.checked\">我已阅读并同意</t-checkbox>\n      <span>服务协议</span>\n      和\n      <span>隐私声明</span>\n    </t-form-item>\n\n    <t-form-item>\n      <t-button\n        block\n        size=\"large\"\n        type=\"submit\"\n      >\n        注册\n      </t-button>\n    </t-form-item>\n\n    <div class=\"switch-container\">\n      <span\n        class=\"tip\"\n        @click=\"switchType(type == 'phone' ? 'email' : 'phone')\"\n      >\n        {{ type == 'phone' ? '使用邮箱注册' : '使用手机号注册' }}\n      </span>\n    </div>\n  </t-form>\n</template>\n\n<script setup lang=\"ts\">\nimport { useCounter } from '@/hooks/use-counter';\n\nconst INITIAL_DATA = {\n  phone: '',\n  email: '',\n  password: '',\n  verifyCode: '',\n  checked: false\n};\n\nconst FORM_RULES = {\n  phone: [{ required: true, message: '手机号必填', type: 'error' }],\n  email: [\n    { required: true, message: '邮箱必填', type: 'error' },\n    { email: true, message: '请输入正确的邮箱', type: 'warning' }\n  ],\n  password: [{ required: true, message: '密码必填', type: 'error' }],\n  verifyCode: [{ required: true, message: '验证码必填', type: 'error' }]\n};\n\nconst type = ref('phone');\n\nconst form = ref();\nconst formData = ref({ ...INITIAL_DATA });\n\nconst showPsw = ref(false);\n\nconst [countDown, handleCounter] = useCounter();\n\nconst emit = defineEmits(['registerSuccess']);\n\nconst onSubmit = ({ validateResult }) => {\n  if (validateResult === true) {\n    if (!formData.value.checked) {\n      MessagePlugin.error('请同意服务协议和隐私声明');\n      return;\n    }\n    MessagePlugin.success('注册成功');\n    emit('registerSuccess');\n  }\n};\n\nconst switchType = val => {\n  form.value.reset();\n  type.value = val;\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import url('../index.less');\n</style>\n","<!--\n * @Description: \n-->\n<template>\n  <div class=\"wrapper\">\n    <!-- <login-header /> -->\n    <div class=\"login-wrapper\">\n      <div class=\"login-container\">\n        <img\n          class=\"login-one-ball\"\n          src=\"../../assets/images/material1.png\"\n        />\n        <img\n          class=\"login-two-ball\"\n          src=\"../../assets/images/material2.png\"\n        />\n        <div class=\"title-container\">\n          <h1 class=\"title margin-no\">登录</h1>\n          <!-- <h1 class=\"title\">Vue3 Admin Starter</h1> -->\n          <div class=\"sub-title\">\n            <p class=\"tip\">\n              {{ type == 'register' ? '已有账号?' : '没有账号吗?' }}\n            </p>\n            <p\n              class=\"tip\"\n              @click=\"switchType(type == 'register' ? 'login' : 'register')\"\n            >\n              {{ type == 'register' ? '登录' : '注册新账号' }}\n            </p>\n          </div>\n        </div>\n\n        <login v-if=\"type === 'login'\" />\n        <register\n          v-else\n          @register-success=\"switchType('login')\"\n        />\n        <setting />\n      </div>\n\n      <footer class=\"copyright\">\n        Copyright @ 2021-{{ new Date().getFullYear() }} {{ COMPANY_NAME }}. All\n        Rights Reserved\n      </footer>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nexport default {\n  name: 'LoginIndex'\n};\n</script>\n<script setup lang=\"ts\">\nimport Login from './components/login.vue';\nimport Register from './components/register.vue';\nimport LoginHeader from './components/header.vue';\nimport Setting from '@/layouts/setting.vue';\nimport { COMPANY_NAME } from '../../../build/constant';\nconst type = ref('login');\nconst switchType = (val: string) => {\n  type.value = val;\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import url('./index.less');\n</style>\n"],"names":["_imports_0","URL","import","meta","url","href","_imports_1","useCounter","duration","intervalTimer","onUnmounted","clearInterval","countDown","ref","value","setInterval","userStore","useUserStore","FORM_RULES","phone","required","message","type","account","password","verifyCode","formData","__spreadValues","checked","showPsw","handleCounter","switchType","val","router","useRouter","onSubmit","_0","__async","this","validateResult","login","MessagePlugin","success","push","path","e","MessagePlugin$1","error","email","form","emit","reset","name"],"mappings":"mwBAAA,MAAeA,EAAA,GAAA,IAAAC,IAAA,2BAAAC,OAAAC,KAAAC,KAAAC,KCAAC,EAAA,GAAA,IAAAL,IAAA,2BAAAC,OAAAC,KAAAC,KAAAC,KCORE,EAAA,CAAAC,EAAA,MACL,IAAAC,EACAC,EAAA,KACEC,cAAAF,KAEF,MAAAG,EAAAC,EAAA,GAEA,MAAA,CAAOD,EACL,KAEEA,EAAAE,MAAAN,EACAC,EAAAM,YAAA,KACEH,EAAAE,MAAA,EACEF,EAAAE,OAAA,GAEAH,cAAAF,GACAG,EAAAE,MAAA,IACF,gSC2GR,MAAAE,EAAAC,IAUAC,EAAA,CAAmBC,MAAA,CAAA,CAAAC,UAAA,EAAAC,QAAA,QAAAC,KAAA,UAC0CC,QAAA,CAAA,CAAAH,UAAA,EAAAC,QAAA,OAAAC,KAAA,UACCE,SAAA,CAAA,CAAAJ,UAAA,EAAAC,QAAA,OAAAC,KAAA,UACCG,WAAA,CAAA,CAAAL,UAAA,EAAAC,QAAA,QAAAC,KAAA,WAI/DA,EAAAT,EAAA,YAEAa,EAAAb,EAAAc,EAAA,GAjBA,CAAqBR,MAAA,GACZI,QAAA,QACEC,SAAA,QACCC,WAAA,GACEG,SAAA,KAcdC,EAAAhB,GAAA,IAEAD,EAAAkB,GAAAvB,IAEAwB,EAAAC,IACEV,EAAAR,MAAAkB,GAGFC,EAAAC,IAEAC,EAAAC,IAAAC,SAAAC,OAAA,CAAAF,KAAA,WAAAG,eAAAA,IACE,IAAA,IAAAA,EACE,UACEvB,EAAAwB,MAAAd,EAAAZ,OAEA2B,EAAAC,QAAA,QACAT,EAAAU,KAAA,CAAYC,KAAA,0BAEXC,GAGDC,EAAAC,MAAAF,EAAAxB,62EC3DN,MAQAH,EAAA,CAAmBC,MAAA,CAAA,CAAAC,UAAA,EAAAC,QAAA,QAAAC,KAAA,UAC0C0B,MAAA,CACpD,CAAA5B,UAAA,EAAAC,QAAA,OAAAC,KAAA,SAC4C,CAAA0B,OAAA,EAAA3B,QAAA,WAAAC,KAAA,YAEnDE,SAAA,CAAA,CAAAJ,UAAA,EAAAC,QAAA,OAAAC,KAAA,UAC6DG,WAAA,CAAA,CAAAL,UAAA,EAAAC,QAAA,QAAAC,KAAA,WAI/DA,EAAAT,EAAA,SAEAoC,EAAApC,IACAa,EAAAb,EAAAc,EAAA,GArBA,CAAqBR,MAAA,GACZ6B,MAAA,GACAxB,SAAA,GACGC,WAAA,GACEG,SAAA,KAmBdC,EAAAhB,GAAA,IAEAD,EAAAkB,GAAAvB,IAIA4B,EAAA,EAAAI,eAAAA,MACE,IAAA,IAAAA,EAAA,CACE,IAAAb,EAAAZ,MAAAc,QAEE,YADAa,cAAAM,MAAA,gBAGFN,cAAAC,QAAA,QACAQ,EAAA,k5DAIJlB,gCACEiB,EAAAnC,MAAAqC,aACA7B,EAAAR,MAAAkB,GAFF,IAAAA,0gBCzGA,CAAeoB,KAAA,gCAUf,MAAA9B,EAAAT,EAAA,SACAkB,EAAAC,IACEV,EAAAR,MAAAkB"}